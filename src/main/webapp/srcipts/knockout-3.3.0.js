





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-4ba00b1aa0227e4b7a7961544c3b7938afb2720757a471735991ec4475c829e0.css" integrity="sha256-S6ALGqAifkt6eWFUTDt5OK+ycgdXpHFzWZHsRHXIKeA=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-65f9c4da76bb0a16d23d1fdf2295e9d1c4e3f83921e8450023049f34e0115f68.css" integrity="sha256-ZfnE2na7ChbSPR/fIpXp0cTj+Dkh6EUAIwSfNOARX2g=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>JAZ_s16_e7/knockout-3.3.0.js at master Â· MariannaJan/JAZ_s16_e7</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars0.githubusercontent.com/u/19960868?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="MariannaJan/JAZ_s16_e7" property="og:title" /><meta content="https://github.com/MariannaJan/JAZ_s16_e7" property="og:url" /><meta content="Contribute to JAZ_s16_e7 development by creating an account on GitHub." property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTgyOTE2MTAwOjMwYzUwODc4MTJlYzMxZWZjYmVjNTc2MDQzYjI1ODhkNGY4ZTNiMTllYjAxYjhkMTQ2MDEwMGJhMDM4NTRlYjc=--78f405f7ecc08a0984bb303dc641217175aa4a2b">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="F25B:438A:2E5F6FC:456A154:594D0DAD" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="F25B:438A:2E5F6FC:456A154:594D0DAD" name="octolytics-dimension-request_id" /><meta content="iad" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" /><meta content="19917586" name="octolytics-actor-id" /><meta content="ryuryong" name="octolytics-actor-login" /><meta content="6d4be262254c6858b9d72b2030a9046a9b53ccb2b39d6f3fdfbe8656b5aa5126" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
  <meta name="user-login" content="ryuryong">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="YWYxYWRmNzdmNjE3OWFiMmQ2OGEyNGE2MzI5MDE2MmU5Y2E1MmRmODY4YWI1Yzk5YzFiYWM4Y2M5OTU2NzQ0NXx7InJlbW90ZV9hZGRyZXNzIjoiMTA5LjI0MS40NS4xMTMiLCJyZXF1ZXN0X2lkIjoiRjI1Qjo0MzhBOjJFNUY2RkM6NDU2QTE1NDo1OTREMERBRCIsInRpbWVzdGFtcCI6MTQ5ODIyMTk5NywiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">


  <meta name="html-safe-nonce" content="7409dc523cac971a7fc02f611ddc5579b0b755e9">

  <meta http-equiv="x-pjax-version" content="842b8196934d499e7b3aeddaf81d3a0f">
  

      <link href="https://github.com/MariannaJan/JAZ_s16_e7/commits/master.atom" rel="alternate" title="Recent Commits to JAZ_s16_e7:master" type="application/atom+xml">

  <meta name="description" content="Contribute to JAZ_s16_e7 development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/MariannaJan/JAZ_s16_e7 git https://github.com/MariannaJan/JAZ_s16_e7.git">

  <meta content="19960868" name="octolytics-dimension-user_id" /><meta content="MariannaJan" name="octolytics-dimension-user_login" /><meta content="93986296" name="octolytics-dimension-repository_id" /><meta content="MariannaJan/JAZ_s16_e7" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="true" name="octolytics-dimension-repository_is_fork" /><meta content="60907607" name="octolytics-dimension-repository_parent_id" /><meta content="Tokiya/JAZ_s16_e7" name="octolytics-dimension-repository_parent_nwo" /><meta content="60907607" name="octolytics-dimension-repository_network_root_id" /><meta content="Tokiya/JAZ_s16_e7" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/MariannaJan/JAZ_s16_e7/blob/master/src/main/webapp/scripts/knockout-3.3.0.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production page-blob">
    



  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<div class="header" role="banner">
  <div class="container clearfix">
    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/search" class="js-site-search-form" data-scoped-search-url="/MariannaJan/JAZ_s16_e7/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/MariannaJan/JAZ_s16_e7/blob/master/src/main/webapp/scripts/knockout-3.3.0.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
            <li class="header-nav-item">
              <a href="/marketplace" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace">
                Marketplace
</a>            </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    

  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       aria-expanded="false"
       aria-haspopup="true"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>




      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/ryuryong"
       aria-label="View profile and more"
       aria-expanded="false"
       aria-haspopup="true"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@ryuryong" class="avatar" src="https://avatars0.githubusercontent.com/u/19917586?v=3&amp;s=40" height="20" width="20">
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">ryuryong</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/ryuryong" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/ryuryong?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="ltqcss1HzhYjSGTRpcLtm7cdkzqRVi1Px1PUwn/IpcOvz2DYJUC8hdwf1Zjeol7peapETDS495E179YDQt0k4A==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="n2EoTsxtm4zFz8RbkCoX8mpLoh9aRqlGuZklhnJnjSKmdNQkJGrpHzqYdRLrSqSApPx1af+oc5hLJSdHT3IMAQ==" /></div>
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
        Sign out
      </button>
</form>  </div>
</div>


      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      




    <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
      <div class="container repohead-details-container">

        <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="+afIuu5N/Diyy/exPNTpO4ehjaTFlc+2AqEovi7IfsoArHgBAO9QTygsg/vsp0fVhIZt+xbqT0UCdzzGsURoxw==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="93986296" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/MariannaJan/JAZ_s16_e7/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
            <a class="social-count js-social-count"
              href="/MariannaJan/JAZ_s16_e7/watchers"
              aria-label="1 user is watching this repository">
              1
            </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="GU8AVE6teN7AqD9JpRYP37cMUVmEuS9Ss90VBPx5Z9dyaaz1qnwI0sry0NLMWZDn0JNDqVnv9jrGZ+CuMNzrbg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar MariannaJan/JAZ_s16_e7"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/MariannaJan/JAZ_s16_e7/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="iGKPyYdqWod+QROmvVRa1x/fxUWJiNCdN90SPxbNxOI2/nngQT6SYZbU4kUg0GFGUH8gt9B6EwFnuS1BbFeS/g==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star MariannaJan/JAZ_s16_e7"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/MariannaJan/JAZ_s16_e7/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/fork" class="btn-with-count" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Wr3QBy4k8r0JCRY0Ed/p3wziMup+vg2c9ITyN2qbKjDckstRxsaRhNNrlTzTK+URkYKr9XzKVgfbVJaJsyieNg==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of MariannaJan/JAZ_s16_e7 to your account"
                aria-label="Fork your own copy of MariannaJan/JAZ_s16_e7 to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/MariannaJan/JAZ_s16_e7/network" class="social-count"
       aria-label="1 user forked this repository">
      1
    </a>
  </li>
</ul>

        <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
  <span class="author" itemprop="author"><a href="/MariannaJan" class="url fn" rel="author">MariannaJan</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/MariannaJan/JAZ_s16_e7" data-pjax="#js-repo-pjax-container">JAZ_s16_e7</a></strong>

    <span class="fork-flag">
      <span class="text">forked from <a href="/Tokiya/JAZ_s16_e7">Tokiya/JAZ_s16_e7</a></span>
    </span>
</h1>

      </div>
      <div class="container">
        
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/MariannaJan/JAZ_s16_e7" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /MariannaJan/JAZ_s16_e7" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>


  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/MariannaJan/JAZ_s16_e7/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /MariannaJan/JAZ_s16_e7/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/MariannaJan/JAZ_s16_e7/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /MariannaJan/JAZ_s16_e7/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/MariannaJan/JAZ_s16_e7/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /MariannaJan/JAZ_s16_e7/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

    <div class="reponav-dropdown js-menu-container">
      <button type="button" class="btn-link reponav-item reponav-dropdown js-menu-target " data-no-toggle aria-expanded="false" aria-haspopup="true">
        Insights
        <svg aria-hidden="true" class="octicon octicon-triangle-down v-align-middle text-gray" height="11" version="1.1" viewBox="0 0 12 16" width="8"><path fill-rule="evenodd" d="M0 5l6 6 6-6z"/></svg>
      </button>
      <div class="dropdown-menu-content js-menu-content">
        <div class="dropdown-menu dropdown-menu-sw">
          <a class="dropdown-item" href="/MariannaJan/JAZ_s16_e7/pulse" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
            Pulse
          </a>
          <a class="dropdown-item" href="/MariannaJan/JAZ_s16_e7/graphs" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
            Graphs
          </a>
        </div>
      </div>
    </div>
</nav>

      </div>
    </div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    
  <a href="/MariannaJan/JAZ_s16_e7/blob/5bd4b4cf54042d80ce9065d0653ce07c023885de/src/main/webapp/scripts/knockout-3.3.0.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:af9aa8b6ee1ec9adc122ffe717764d32 -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/MariannaJan/JAZ_s16_e7/blob/master/src/main/webapp/scripts/knockout-3.3.0.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/MariannaJan/JAZ_s16_e7/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
    </div>
    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/MariannaJan/JAZ_s16_e7"><span>JAZ_s16_e7</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/MariannaJan/JAZ_s16_e7/tree/master/src"><span>src</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/MariannaJan/JAZ_s16_e7/tree/master/src/main"><span>main</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/MariannaJan/JAZ_s16_e7/tree/master/src/main/webapp"><span>webapp</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/MariannaJan/JAZ_s16_e7/tree/master/src/main/webapp/scripts"><span>scripts</span></a></span><span class="separator">/</span><strong class="final-path">knockout-3.3.0.js</strong>
    </div>
  </div>


  <include-fragment class="commit-tease" src="/MariannaJan/JAZ_s16_e7/contributors/master/src/main/webapp/scripts/knockout-3.3.0.js">
    <div>
      Fetching contributors&hellip;
    </div>

    <div class="commit-tease-contributors">
      <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
      <span class="loader-error">Cannot retrieve contributors at this time</span>
    </div>
</include-fragment>
  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/MariannaJan/JAZ_s16_e7/raw/master/src/main/webapp/scripts/knockout-3.3.0.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/MariannaJan/JAZ_s16_e7/blame/master/src/main/webapp/scripts/knockout-3.3.0.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/MariannaJan/JAZ_s16_e7/commits/master/src/main/webapp/scripts/knockout-3.3.0.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="github-windows://openRepo/https://github.com/MariannaJan/JAZ_s16_e7?branch=master&amp;filepath=src%2Fmain%2Fwebapp%2Fscripts%2Fknockout-3.3.0.js"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/edit/master/src/main/webapp/scripts/knockout-3.3.0.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="TrDjTWCSP0pWc7v2P4pgm9yjIHpehRKNe3ZhxvrosCJYpKTLD5TcfAPiZDXl+jh/Rs1ZWBO4hAVC5xTb44OzLA==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/MariannaJan/JAZ_s16_e7/delete/master/src/main/webapp/scripts/knockout-3.3.0.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="tPQz4vqJV3sVvKMoalHwrUoKzrp3r7qgBda8PRiyk9RRpqGHIbCarU3pN+m7B3LGciVk5Y08P4UtscOK3PVVnw==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      116 lines (114 sloc)
      <span class="file-info-divider"></span>
    54.6 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Knockout JavaScript library v3.3.0</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (c) Steven Sanderson - http://knockoutjs.com/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * License: MIT (http://www.opensource.org/licenses/mit-license.php)</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>() {(<span class="pl-k">function</span>(<span class="pl-smi">p</span>){<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">this</span><span class="pl-k">||</span>(<span class="pl-c1">0</span>,eval)(<span class="pl-s"><span class="pl-pds">&quot;</span>this<span class="pl-pds">&quot;</span></span>),w<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">document</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">navigator</span>,u<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">jQuery</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-c1">JSON</span>;(<span class="pl-k">function</span>(<span class="pl-smi">p</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span><span class="pl-en">define</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>exports<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>require<span class="pl-pds">&quot;</span></span>],p)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> require<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">?</span><span class="pl-en">p</span>(<span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">||</span><span class="pl-c1">exports</span>)<span class="pl-k">:</span><span class="pl-en">p</span>(<span class="pl-smi">y</span>.<span class="pl-smi">ko</span><span class="pl-k">=</span>{})})(<span class="pl-k">function</span>(<span class="pl-c1">N</span>,<span class="pl-c1">O</span>){<span class="pl-k">function</span> <span class="pl-en">J</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-k">typeof</span> a <span class="pl-k">in</span> <span class="pl-c1">Q</span><span class="pl-k">?</span>a<span class="pl-k">===</span>d<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function R(a,d){var c;return function(){c||(c=setTimeout(function(){c=p;a()},d))}}function S(a,d){var c;return function(){clearTimeout(c);</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(a,d)}}function K(b,d,c,e){a.d[b]={init:function(b,k,h,l,g){var m,x;a.w(function(){var q=a.a.c(k()),n=!c!==!q,r=!x;if(r||d||n!==m)r&amp;&amp;a.Z.oa()&amp;&amp;(x=a.a.la(a.e.childNodes(b),!0)),n?(r||a.e.T(b,a.a.la(x)),a.Ja(e?e(g,q):g,b)):a.e.ma(b),m=n},null,{q:b});return{controlsDescendantBindings:!0}}};a.h.ka[b]=!1;a.e.R[b]=!0}var a=&quot;undefined&quot;!==typeof N?N:{};a.b=function(b,d){for(var c=b.split(&quot;.&quot;),e=a,f=0;f&lt;c.length-1;f++)e=e[c[f]];e[c[c.length-1]]=d};a.D=function(a,d,c){a[d]=c};a.version=&quot;3.3.0&quot;;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>version<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">version</span>);<span class="pl-smi">a</span>.<span class="pl-en">a</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(c,a[c])}function d(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&amp;&amp;(a[c]=b[c]);return a}function c(a,b){a.__proto__=b;return a}function e(b,c,g,d){var e=b[c].match(m)||[];a.a.o(g.match(m),function(b){a.a.ga(e,b,d)});b[c]=e.join(&quot; &quot;)}var f={__proto__:[]}instanceof Array,k={},h={};k[M&amp;&amp;/Firefox\/2/i.test(M.userAgent)?&quot;KeyboardEvent&quot;:&quot;UIEvents&quot;]=[&quot;keyup&quot;,&quot;keydown&quot;,&quot;keypress&quot;];k.MouseEvents=&quot;click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave&quot;.split(&quot; &quot;);</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(k,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)h[b[c]]<span class="pl-k">=</span>a});<span class="pl-k">var</span> l<span class="pl-k">=</span>{propertychange<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},g<span class="pl-k">=</span>w<span class="pl-k">&amp;&amp;</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">3</span>,b<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>3c!--[if gt IE <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> <span class="pl-k">++</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--<span class="pl-cce">\x</span>3e<span class="pl-pds">&quot;</span></span>,c[<span class="pl-c1">0</span>];);<span class="pl-k">return</span> <span class="pl-c1">4</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>p}(),m<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\S</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>;<span class="pl-k">return</span>{Bb<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>authenticity_token<span class="pl-pds">&quot;</span></span>,<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>__RequestVerificationToken(_<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>],<span class="pl-en">o</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)<span class="pl-en">b</span>(a[c],c)},<span class="pl-en">m</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">indexOf</span>)<span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">indexOf</span>.<span class="pl-c1">call</span>(a,</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">b);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">===</span>b)<span class="pl-k">return</span> c;<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">vb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a[g],g))<span class="pl-k">return</span> a[g];<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">ya</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(b,c);<span class="pl-c1">0</span><span class="pl-k">&lt;</span>g<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(g,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">===</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">shift</span>()},<span class="pl-en">wb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(c,b[g])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b[g]);<span class="pl-k">return</span> c},<span class="pl-en">Ka</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(a[g],g));<span class="pl-k">return</span> c},<span class="pl-en">xa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-en">b</span>(a[g],g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a[g]);</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c},<span class="pl-en">ia</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>)<span class="pl-smi">a</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(a,b);<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b[c]);<span class="pl-k">return</span> a},<span class="pl-en">ga</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">cb</span>(b),c);<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c)<span class="pl-k">:</span>g<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>)},za<span class="pl-k">:</span>f,extend<span class="pl-k">:</span>d,Fa<span class="pl-k">:</span>c,Ga<span class="pl-k">:</span>f<span class="pl-k">?</span>c<span class="pl-k">:</span>d,<span class="pl-c1">A</span><span class="pl-k">:</span>b,<span class="pl-en">pa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> a;<span class="pl-k">var</span> c<span class="pl-k">=</span>{},g;<span class="pl-k">for</span>(g <span class="pl-k">in</span> a)<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(g)<span class="pl-k">&amp;&amp;</span>(c[g]<span class="pl-k">=</span><span class="pl-en">b</span>(a[g],g,a));<span class="pl-k">return</span> c},<span class="pl-en">Ra</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(;<span class="pl-smi">b</span>.<span class="pl-c1">firstChild</span>;)<span class="pl-smi">a</span>.<span class="pl-en">removeNode</span>(<span class="pl-smi">b</span>.<span class="pl-c1">firstChild</span>)},<span class="pl-en">Jb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(b);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">0</span>].<span class="pl-c1">ownerDocument</span><span class="pl-k">||</span>w).<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">d;g<span class="pl-k">++</span>)<span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">a</span>.<span class="pl-en">S</span>(b[g]));<span class="pl-k">return</span> c},<span class="pl-en">la</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span>[];g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>b[g].<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">S</span>(m)<span class="pl-k">:</span>m)}<span class="pl-k">return</span> e},<span class="pl-en">T</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ra</span>(b);<span class="pl-k">if</span>(c)<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(c[g])},<span class="pl-en">Qb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span>[b]<span class="pl-k">:</span>b;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>g[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">parentNode</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>f;m<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">insertBefore</span>(c[m],d);m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>f;m<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">removeNode</span>(g[m])}},<span class="pl-en">na</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>){<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">parentNode</span><span class="pl-k">||</span>b;<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">parentNode</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">b;)<span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">!==</span>g;)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(c),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">nextSibling</span>,<span class="pl-k">!</span>c)<span class="pl-k">return</span>;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(g)}}<span class="pl-k">return</span> a},<span class="pl-en">Sb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">7</span><span class="pl-k">&gt;</span>g<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selected<span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span>b},<span class="pl-en">ib</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">===</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span>p<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">trim</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">trim</span>()<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">\s</span><span class="pl-cce">\x</span>a0]</span><span class="pl-k">+</span><span class="pl-k">|</span><span class="pl-c1">[<span class="pl-c1">\s</span><span class="pl-cce">\x</span>a0]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">Dc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">===</span>b},<span class="pl-en">jc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a<span class="pl-k">===</span>b)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">11</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">contains</span>)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">contains</span>(<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">:</span>a);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">compareDocumentPosition</span>)<span class="pl-k">return</span> <span class="pl-c1">16</span><span class="pl-k">==</span>(<span class="pl-smi">b</span>.<span class="pl-c1">compareDocumentPosition</span>(a)<span class="pl-k">&amp;</span><span class="pl-c1">16</span>);<span class="pl-k">for</span>(;a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!=</span>b;)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">return</span><span class="pl-k">!!</span>a},<span class="pl-en">Qa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">jc</span>(b,<span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>.<span class="pl-c1">documentElement</span>)},<span class="pl-en">tb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">vb</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Qa</span>)},<span class="pl-en">v</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()},<span class="pl-en">n</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>l[c];<span class="pl-k">if</span>(<span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;</span>u)<span class="pl-en">u</span>(b).<span class="pl-en">bind</span>(c,d);<span class="pl-k">else</span> <span class="pl-k">if</span>(m<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">addEventListener</span>)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">attachEvent</span>){<span class="pl-k">var</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">call</span>(b,a)},f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">attachEvent</span>(f,e);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-en">fa</span>(b,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">detachEvent</span>(f,e)})}<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Browser doesn&#39;t support addEventListener or attachEvent<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-smi">b</span>.<span class="pl-c1">addEventListener</span>(c,d,<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">qa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>element must be a DOM node when calling triggerEvent<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> g;<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span>,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>g<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>radio<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>g)<span class="pl-k">:</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(u<span class="pl-k">&amp;&amp;!</span>g)<span class="pl-en">u</span>(b).<span class="pl-en">trigger</span>(c);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">w</span>.<span class="pl-smi">createEvent</span>)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">dispatchEvent</span>)g<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">createEvent</span>(h[c]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTMLEvents<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">g</span>.<span class="pl-c1">initEvent</span>(c,</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,y,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,b),<span class="pl-smi">b</span>.<span class="pl-c1">dispatchEvent</span>(g);<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>The supplied element doesn&#39;t support dispatchEvent<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">click</span>)<span class="pl-smi">b</span>.<span class="pl-c1">click</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">fireEvent</span>)<span class="pl-smi">b</span>.<span class="pl-en">fireEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c);<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Browser doesn&#39;t support triggering events<span class="pl-pds">&quot;</span></span>);},<span class="pl-en">c</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">F</span>(b)<span class="pl-k">?</span><span class="pl-en">b</span>()<span class="pl-k">:</span>b},<span class="pl-en">cb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">F</span>(b)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">B</span>()<span class="pl-k">:</span>b},<span class="pl-en">Ia</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> d;c<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">classList</span><span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">classList</span>[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>add<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>],<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(m),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">call</span>(<span class="pl-smi">b</span>.<span class="pl-smi">classList</span>,a)}))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-c1">className</span>.<span class="pl-smi">baseVal</span><span class="pl-k">?</span><span class="pl-en">e</span>(<span class="pl-smi">b</span>.<span class="pl-c1">className</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>baseVal<span class="pl-pds">&quot;</span></span>,c,g)<span class="pl-k">:</span><span class="pl-en">e</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>className<span class="pl-pds">&quot;</span></span>,c,g))},<span class="pl-en">Ha</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(c);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>g<span class="pl-k">||</span>g<span class="pl-k">===</span>p)g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">firstChild</span>(b);<span class="pl-k">!</span>d<span class="pl-k">||</span><span class="pl-c1">3</span><span class="pl-k">!=</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>(d)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">T</span>(b,[<span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>.<span class="pl-c1">createTextNode</span>(g)])<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>g;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">mc</span>(b)},<span class="pl-en">Rb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-c1">7</span><span class="pl-k">&gt;=</span>g)<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-c1">mergeAttributes</span>(<span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;input name=&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;/&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">catch</span>(c){}},<span class="pl-en">mc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">9</span><span class="pl-k">&lt;=</span>g<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">zoom</span>))},<span class="pl-en">kc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(g){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span>;</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>b}},<span class="pl-en">Bc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(b);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(c);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>[],d<span class="pl-k">=</span>b;d<span class="pl-k">&lt;=</span>c;d<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(d);<span class="pl-k">return</span> g},<span class="pl-en">O</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a[c]);<span class="pl-k">return</span> b},Hc<span class="pl-k">:</span><span class="pl-c1">6</span><span class="pl-k">===</span>g,Ic<span class="pl-k">:</span><span class="pl-c1">7</span><span class="pl-k">===</span>g,<span class="pl-c1">M</span><span class="pl-k">:</span>g,<span class="pl-en">Db</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>)).<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>))),d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">===</span>c}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">test</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>)},m<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e;e<span class="pl-k">--</span>)<span class="pl-en">d</span>(g[e])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-c1">push</span>(g[e]);<span class="pl-k">return</span> m},<span class="pl-en">yc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ib</span>(b))<span class="pl-k">?</span><span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">E</span>.<span class="pl-smi">parse</span><span class="pl-k">?</span><span class="pl-c1">E</span>.<span class="pl-c1">parse</span>(b)<span class="pl-k">:</span>(<span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b))()<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">jb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">E</span><span class="pl-k">||!</span><span class="pl-c1">E</span>.<span class="pl-smi">stringify</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot find JSON.stringify(). Some browsers (e.g., IE &lt; 8) don&#39;t support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">E</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(b),c,g)},<span class="pl-en">zc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">g</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">params</span><span class="pl-k">||</span>{},e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">includeFields</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">Bb</span>,f<span class="pl-k">=</span>c;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>form<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(c))<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">action</span>,</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l;l<span class="pl-k">--</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Db</span>(c,e[l]),h<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h;h<span class="pl-k">--</span>)m[k[h].<span class="pl-c1">name</span>]<span class="pl-k">=</span>k[h].<span class="pl-c1">value</span>;g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(g);<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>form<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">s</span>.<span class="pl-c1">action</span><span class="pl-k">=</span>f;<span class="pl-smi">s</span>.<span class="pl-c1">method</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>post<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> p <span class="pl-k">in</span> g)c<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>p,<span class="pl-smi">c</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">jb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(g[p])),<span class="pl-smi">s</span>.<span class="pl-c1">appendChild</span>(c);<span class="pl-en">b</span>(m,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>a;<span class="pl-smi">c</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>b;<span class="pl-smi">s</span>.<span class="pl-c1">appendChild</span>(c)});<span class="pl-smi">w</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(s);<span class="pl-smi">d</span>.<span class="pl-smi">submitter</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">submitter</span>(s)<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-c1">submit</span>();<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">s</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(s)},</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>)}}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayForEach<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">o</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayFirst<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">vb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayFilter<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">xa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayGetDistinctValues<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">wb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayIndexOf<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">m</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayMap<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Ka</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayPushAll<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">ia</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.arrayRemoveItem<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">ya</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.extend<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">extend</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.fieldsIncludedWithJsonPost<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Bb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.getFormFields<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Db</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.peekObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">cb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.postJson<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">zc</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.parseJson<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">yc</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.registerEventHandler<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">n</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.stringifyJson<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">jb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.range<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Bc</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.toggleDomNodeCssClass<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Ia</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.triggerEvent<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">qa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.unwrapObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">c</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.objectForEach<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">A</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.addOrRemoveItem<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">ga</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.setTextContent<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Ha</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unwrap<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">c</span>);<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">bind</span><span class="pl-k">||</span>(<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">bind</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>)};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(e,<span class="pl-c1">arguments</span>);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">apply</span>(a,e)}});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>,<span class="pl-smi">k</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>b[c];<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>h<span class="pl-k">||!</span>e[h]){<span class="pl-k">if</span>(<span class="pl-k">!</span>k)<span class="pl-k">return</span> p;h<span class="pl-k">=</span>b[c]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ko<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">++</span>;e[h]<span class="pl-k">=</span>{}}<span class="pl-k">return</span> e[h]}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>__ko__<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTime</span>(),e<span class="pl-k">=</span>{};<span class="pl-k">return</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">a</span>(c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> e<span class="pl-k">===</span>p<span class="pl-k">?</span>p<span class="pl-k">:</span>e[d]},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(e<span class="pl-k">!==</span>p<span class="pl-k">||</span><span class="pl-en">a</span>(c,<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">!==</span>p)<span class="pl-en">a</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)[d]<span class="pl-k">=</span>e},<span class="pl-en">clear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a[c];<span class="pl-k">return</span> b<span class="pl-k">?</span>(<span class="pl-k">delete</span> e[b],a[c]<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">I</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d<span class="pl-k">++</span> <span class="pl-k">+</span>c}}};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.domData<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.domData.clear<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">clear</span>);</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(b,c);e<span class="pl-k">===</span>p<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>[],<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,c,e));<span class="pl-k">return</span> e}function d(c){var e=b(c,!1);if(e)for(var e=e.slice(0),l=0;l&lt;e.length;l++)e[l](c);a.a.f.clear(c);a.a.C.cleanExternalData(c);if(f[c.nodeType])for(e=c.firstChild;c=e;)e=c.nextSibling,8===c.nodeType&amp;&amp;d(c)}var c=a.a.f.I(),e={1:!0,8:!0,9:!0},f={1:!0,9:!0};return{fa:function(a,c){if(&quot;function&quot;!=typeof c)throw Error(&quot;Callback must be a function&quot;);b(a,!0).push(c)},Pb:function(d,e){var f=b(d,!1);f&amp;&amp;(a.a.ya(f,</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">e),<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(d,c,p))},<span class="pl-en">S</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(e[<span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">d</span>(b),f[<span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>])){<span class="pl-k">var</span> c<span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ia</span>(c,<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span>));<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;l<span class="pl-k">&lt;</span>g;l<span class="pl-k">++</span>)<span class="pl-en">d</span>(c[l])}<span class="pl-k">return</span> b},<span class="pl-en">removeNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">S</span>(b);<span class="pl-smi">b</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(b)},<span class="pl-en">cleanExternalData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){u<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">u</span>.<span class="pl-smi">cleanData</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-en">cleanData</span>([a])}}};<span class="pl-smi">a</span>.<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-c1">S</span>;<span class="pl-smi">a</span>.<span class="pl-smi">removeNode</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-smi">removeNode</span>;<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cleanNode<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">S</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>removeNode<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">removeNode</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.domNodeDisposal<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.domNodeDisposal.addDisposeCallback<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-smi">fa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.domNodeDisposal.removeDisposeCallback<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-smi">Pb</span>);(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(u)<span class="pl-k">if</span>(<span class="pl-smi">u</span>.<span class="pl-smi">parseHTML</span>)c<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">parseHTML</span>(b,d)<span class="pl-k">||</span>[];<span class="pl-k">else</span>{<span class="pl-k">if</span>((c<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">clean</span>([b],d))<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">0</span>]){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">11</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">nodeType</span>;)e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>;<span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(e)}}<span class="pl-k">else</span>{(e<span class="pl-k">=</span>d)<span class="pl-k">||</span>(e<span class="pl-k">=</span>w);c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parentWindow</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">defaultView</span><span class="pl-k">||</span>y;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ib</span>(b).<span class="pl-c1">toLowerCase</span>(),e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;(thead<span class="pl-k">|</span>tbody<span class="pl-k">|</span>tfoot)<span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span>[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/table&gt;<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||!</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;tr<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>[<span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;&lt;tbody&gt;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tbody&gt;&lt;/table&gt;<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;td<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||!</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;th<span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span>[<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],k<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ignored&lt;div&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b<span class="pl-k">+</span>f[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/div&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-smi">innerShiv</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">c</span>.<span class="pl-en">innerShiv</span>(k))<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>k;f[<span class="pl-c1">0</span>]<span class="pl-k">--</span>;)e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">lastChild</span>;c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">e</span>.<span class="pl-c1">lastChild</span>.<span class="pl-c1">childNodes</span>)}<span class="pl-k">return</span> c};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">gb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ra</span>(b);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!==</span>p)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">toString</span>()),u)<span class="pl-en">u</span>(b).<span class="pl-en">html</span>(d);<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ca</span>(d,<span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(c[e])}})();</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.parseHtmlFragment<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">ca</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.setHtml<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>);<span class="pl-smi">a</span>.<span class="pl-en">H</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(c)<span class="pl-k">if</span>(<span class="pl-c1">8</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-en">Lb</span>(<span class="pl-smi">c</span>.<span class="pl-c1">nodeValue</span>);<span class="pl-c1">null</span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>({ic<span class="pl-k">:</span>c,wc<span class="pl-k">:</span>f})}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">childNodes</span>,h<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>h;f<span class="pl-k">++</span>)<span class="pl-en">b</span>(k[f],d)}<span class="pl-k">var</span> d<span class="pl-k">=</span>{};<span class="pl-k">return</span>{$<span class="pl-en">a</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> a)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>You can only pass a function to ko.memoization.memoize()<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span>(<span class="pl-c1">4294967296</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>())<span class="pl-k">|</span><span class="pl-c1">0</span>).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-c1">4294967296</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>())<span class="pl-k">|</span><span class="pl-c1">0</span>).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">d[b]<span class="pl-k">=</span>a;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>3c!--[ko_memo:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]--<span class="pl-cce">\x</span>3e<span class="pl-pds">&quot;</span></span>},<span class="pl-en">Wb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[a];<span class="pl-k">if</span>(f<span class="pl-k">===</span>p)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Couldn&#39;t find any memo with ID <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>. Perhaps it&#39;s already been unmemoized.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,b<span class="pl-k">||</span>[]),<span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">finally</span>{<span class="pl-k">delete</span> d[a]}},<span class="pl-en">Xb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>[];<span class="pl-en">b</span>(c,f);<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>h;k<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>f[k].<span class="pl-smi">ic</span>,g<span class="pl-k">=</span>[l];d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ia</span>(g,d);<span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-en">Wb</span>(f[k].<span class="pl-smi">wc</span>,g);<span class="pl-smi">l</span>.<span class="pl-c1">nodeValue</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">l</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(l)}},<span class="pl-en">Lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\[</span>ko_memo<span class="pl-cce">\:</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>)<span class="pl-cce">\]</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>))<span class="pl-k">?</span>a[<span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">null</span>}}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>memoization<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">H</span>);</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>memoization.memoize<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-smi">$a</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>memoization.unmemoize<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-smi">Wb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>memoization.parseMemoText<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-smi">Lb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>memoization.unmemoizeDomNodeAndDescendants<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-smi">Xb</span>);<span class="pl-smi">a</span>.<span class="pl-smi">Sa</span><span class="pl-k">=</span>{<span class="pl-en">throttle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">throttleEvaluation</span><span class="pl-k">=</span>d;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">j</span>({read<span class="pl-k">:</span>b,<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">clearTimeout</span>(c);c<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">b</span>(a)},d)}})},<span class="pl-en">rateLimit</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c,e,f;<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> d<span class="pl-k">?</span>c<span class="pl-k">=</span>d<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">timeout</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">method</span>);f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>notifyWhenChangesStop<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e<span class="pl-k">?</span><span class="pl-c1">S</span><span class="pl-k">:</span><span class="pl-c1">R</span>;<span class="pl-smi">a</span>.<span class="pl-en">Za</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">f</span>(a,c)})},<span class="pl-en">notify</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">equalityComparer</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>always<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">J</span>}};<span class="pl-k">var</span> <span class="pl-c1">Q</span><span class="pl-k">=</span>{<span class="pl-c1">undefined</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,number<span class="pl-k">:</span><span class="pl-c1">1</span>,string<span class="pl-k">:</span><span class="pl-c1">1</span>};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>extenders<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Sa</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">da</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">La</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">hc</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">Gb</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-en">D</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">p</span>)};<span class="pl-smi">a</span>.<span class="pl-smi">Ub</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">Gb</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">hc</span>()};<span class="pl-smi">a</span>.<span class="pl-en">Q</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ga</span>(<span class="pl-c1">this</span>,<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>.<span class="pl-smi">fn</span>);<span class="pl-c1">this</span>.<span class="pl-c1">G</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">rb</span><span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-k">var</span> z<span class="pl-k">=</span>{<span class="pl-en">U</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>;c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.Ub</span>(e,d<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">bind</span>(d)<span class="pl-k">:</span>b,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ya</span>(<span class="pl-smi">e</span>.<span class="pl-c1">G</span>[c],f);<span class="pl-smi">e</span>.<span class="pl-smi">ua</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">ua</span>(c)});<span class="pl-smi">e</span>.<span class="pl-smi">ja</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">ja</span>(c);<span class="pl-smi">e</span>.<span class="pl-c1">G</span>[c]<span class="pl-k">||</span>(<span class="pl-smi">e</span>.<span class="pl-c1">G</span>[c]<span class="pl-k">=</span>[]);<span class="pl-smi">e</span>.<span class="pl-c1">G</span>[c].<span class="pl-c1">push</span>(f);<span class="pl-k">return</span> f},<span class="pl-en">notifySubscribers</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>){d<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">Yb</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">Ba</span>(d))<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">xb</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">G</span>[d].<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>,f;f<span class="pl-k">=</span>c[e];<span class="pl-k">++</span>e)<span class="pl-smi">f</span>.<span class="pl-smi">Gb</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-en">La</span>(b)}<span class="pl-k">finally</span>{<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">end</span>()}},<span class="pl-en">Aa</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">rb</span>},<span class="pl-en">pc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">Aa</span>()<span class="pl-k">!==</span>a},<span class="pl-en">Yb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">++</span><span class="pl-c1">this</span>.<span class="pl-smi">rb</span>},<span class="pl-en">Za</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">F</span>(d),e,f,k;<span class="pl-smi">d</span>.<span class="pl-smi">ta</span><span class="pl-k">||</span>(<span class="pl-smi">d</span>.<span class="pl-smi">ta</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">notifySubscribers</span>,<span class="pl-smi">d</span>.<span class="pl-en">notifySubscribers</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>beforeChange<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">pb</span>(a)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">ta</span>(a,b)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">qb</span>(a)});<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-k">function</span>(){c<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-en">d</span>());e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">d</span>.<span class="pl-en">Wa</span>(f,k)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">ta</span>(f<span class="pl-k">=</span>k)});<span class="pl-smi">d</span>.<span class="pl-en">qb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span>a;</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-en">h</span>()};<span class="pl-smi">d</span>.<span class="pl-en">pb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){e<span class="pl-k">||</span>(f<span class="pl-k">=</span>a,<span class="pl-smi">d</span>.<span class="pl-en">ta</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeChange<span class="pl-pds">&quot;</span></span>))}},<span class="pl-en">Ba</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">G</span>[a]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">G</span>[a].<span class="pl-c1">length</span>},<span class="pl-en">nc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">G</span>[b]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">G</span>[b].<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(<span class="pl-c1">this</span>.<span class="pl-c1">G</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){d<span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>});<span class="pl-k">return</span> d},<span class="pl-en">Wa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">equalityComparer</span><span class="pl-k">||!</span><span class="pl-c1">this</span>.<span class="pl-en">equalityComparer</span>(a,d)},<span class="pl-en">extend</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">Sa</span>[b];<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">f</span>(d,e)<span class="pl-k">||</span>d)});<span class="pl-k">return</span> d}};<span class="pl-smi">a</span>.<span class="pl-en">D</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>subscribe<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">z</span>.<span class="pl-c1">U</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>extend<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">z</span>.<span class="pl-smi">extend</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>getSubscriptionsCount<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">z</span>.<span class="pl-smi">nc</span>);</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Fa</span>(z,<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>.<span class="pl-smi">fn</span><span class="pl-k">=</span>z;<span class="pl-smi">a</span>.<span class="pl-en">Hb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-c1">U</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">notifySubscribers</span>};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>subscribable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isSubscribable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Hb</span>);<span class="pl-smi">a</span>.<span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e);e<span class="pl-k">=</span>a}function d(){e=c.pop()}var c=[],e,f=0;return{xb:b,end:d,Ob:function(b){if(e){if(!a.Hb(b))throw Error(&quot;Only subscribable things can act as dependencies&quot;);e.La(b,b.ac||(b.ac=++f))}},u:function(a,c,e){try{return b(),a.apply(c,e||[])}finally{d()}},oa:function(){if(e)return e.w.oa()},</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Ca</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(e)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">Ca</span>}}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>computedContext<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">Z</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>computedContext.getDependenciesCount<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">oa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>computedContext.isInitial<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">Ca</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>computedContext.isSleeping<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">Jc</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ignoreDependencies<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Gc</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-smi">u</span>);<span class="pl-smi">a</span>.<span class="pl-en">r</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">Wa</span>(c,<span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">X</span>(),c<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>],<span class="pl-smi">d</span>.<span class="pl-en">W</span>()),<span class="pl-c1">this</span>;<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">Ob</span>(d);<span class="pl-k">return</span> c}<span class="pl-k">var</span> c<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>.<span class="pl-c1">call</span>(d);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ga</span>(d,<span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">fn</span>);<span class="pl-smi">d</span>.<span class="pl-en">B</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> c};<span class="pl-smi">d</span>.<span class="pl-en">W</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-en">notifySubscribers</span>(c)};<span class="pl-smi">d</span>.<span class="pl-en">X</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-en">notifySubscribers</span>(c,</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>beforeChange<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">a</span>.<span class="pl-en">D</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>peek<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">B</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>valueHasMutated<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">W</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>valueWillMutate<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">X</span>);<span class="pl-k">return</span> d};<span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">fn</span><span class="pl-k">=</span>{equalityComparer<span class="pl-k">:</span><span class="pl-c1">J</span>};<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">Ac</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>__ko_proto__<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">fn</span>[<span class="pl-c1">H</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Fa</span>(<span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">fn</span>,<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>.<span class="pl-smi">fn</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ta</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">===</span>b<span class="pl-k">||</span>b<span class="pl-k">===</span>p<span class="pl-k">||</span>b[<span class="pl-c1">H</span>]<span class="pl-k">===</span>p<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>b[<span class="pl-c1">H</span>]<span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">Ta</span>(b[<span class="pl-c1">H</span>],d)};<span class="pl-smi">a</span>.<span class="pl-en">F</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">Ta</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">r</span>)};<span class="pl-smi">a</span>.<span class="pl-en">Da</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">H</span>]<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">H</span>]<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">j</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">qc</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>observable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">r</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">F</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isWriteableObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Da</span>);</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isWritableObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Da</span>);<span class="pl-smi">a</span>.<span class="pl-en">ba</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span>[];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> b<span class="pl-k">||!</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>length<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>The argument passed when initializing an observable array must be an array, or null, or undefined.<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">r</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ga</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">fn</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">extend</span>({trackArrayChanges<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})};<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">fn</span><span class="pl-k">=</span>{<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">B</span>(),c<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> b<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">F</span>(b)<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span>b}<span class="pl-k">:</span>b,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>d[f];<span class="pl-en">e</span>(k)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">X</span>(),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(k),<span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(f,<span class="pl-c1">1</span>),f<span class="pl-k">--</span>)}<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">W</span>();<span class="pl-k">return</span> c},</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-en">removeAll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b<span class="pl-k">===</span>p){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">B</span>(),c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">X</span>();<span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span>);<span class="pl-c1">this</span>.<span class="pl-en">W</span>();<span class="pl-k">return</span> c}<span class="pl-k">return</span> b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">remove</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(b,c)})<span class="pl-k">:</span>[]},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">B</span>(),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> b<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">F</span>(b)<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span>b}<span class="pl-k">:</span>b;<span class="pl-c1">this</span>.<span class="pl-en">X</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e;e<span class="pl-k">--</span>)<span class="pl-en">c</span>(d[e])<span class="pl-k">&amp;&amp;</span>(d[e].<span class="pl-smi">_destroy</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">W</span>()},<span class="pl-en">destroyAll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">===</span>p<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">destroy</span>(<span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>})<span class="pl-k">:</span>b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">destroy</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(b,d)})<span class="pl-k">:</span>[]},<span class="pl-en">indexOf</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>();<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(d,</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">b)},<span class="pl-en">replace</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">X</span>(),<span class="pl-c1">this</span>.<span class="pl-en">B</span>()[c]<span class="pl-k">=</span>d,<span class="pl-c1">this</span>.<span class="pl-en">W</span>())}};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pop push reverse shift sort splice unshift<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">fn</span>[b]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">B</span>();<span class="pl-c1">this</span>.<span class="pl-en">X</span>();<span class="pl-c1">this</span>.<span class="pl-en">yb</span>(a,b,<span class="pl-c1">arguments</span>);a<span class="pl-k">=</span>a[b].<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>);<span class="pl-c1">this</span>.<span class="pl-en">W</span>();<span class="pl-k">return</span> a}});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>slice<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">fn</span>[b]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>();<span class="pl-k">return</span> a[b].<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>)}});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Fa</span>(<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">fn</span>,<span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">fn</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>observableArray<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">ba</span>);<span class="pl-smi">a</span>.<span class="pl-smi">Sa</span>.<span class="pl-en">trackArrayChanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>c){c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">notifySubscribers</span>;<span class="pl-smi">b</span>.<span class="pl-en">notifySubscribers</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b<span class="pl-k">||</span><span class="pl-k">++</span>k;<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)};<span class="pl-k">var</span> d<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-en">B</span>()<span class="pl-k">||</span>[]);e<span class="pl-k">=</span><span class="pl-c1">null</span>;f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">U</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c<span class="pl-k">||</span>[]);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-en">Ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arrayChange<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">var</span> g;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>k)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ma</span>(d,c,{sparse<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});g<span class="pl-k">=</span>e}d<span class="pl-k">=</span>c;e<span class="pl-k">=</span><span class="pl-c1">null</span>;k<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">notifySubscribers</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>arrayChange<span class="pl-pds">&quot;</span></span>)})}}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">yb</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>,f,k<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ja</span>,l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ua</span>;<span class="pl-smi">b</span>.<span class="pl-en">ja</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">call</span>(b,a);<span class="pl-s"><span class="pl-pds">&quot;</span>arrayChange<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>()};<span class="pl-smi">b</span>.<span class="pl-en">ua</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">call</span>(b,a);<span class="pl-s"><span class="pl-pds">&quot;</span>arrayChange<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">Ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arrayChange<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-smi">f</span>.<span class="pl-en">p</span>(),c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)};</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">yb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">function</span> <span class="pl-en">l</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> h[<span class="pl-smi">h</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>{status<span class="pl-k">:</span>a,value<span class="pl-k">:</span>b,index<span class="pl-k">:</span>c}}<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;!</span>k){<span class="pl-k">var</span> h<span class="pl-k">=</span>[],r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,v<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">switch</span>(d){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>push<span class="pl-pds">&quot;</span></span>:t<span class="pl-k">=</span>r;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>unshift<span class="pl-pds">&quot;</span></span>:<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>v;d<span class="pl-k">++</span>)<span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span>,f[d],t<span class="pl-k">+</span>d);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>pop<span class="pl-pds">&quot;</span></span>:t<span class="pl-k">=</span>r<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>:r<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,b[t],t);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>:d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span><span class="pl-k">&gt;</span>f[<span class="pl-c1">0</span>]<span class="pl-k">?</span>r<span class="pl-k">+</span>f[<span class="pl-c1">0</span>]<span class="pl-k">:</span>f[<span class="pl-c1">0</span>]),r);<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span>v<span class="pl-k">?</span>r<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d<span class="pl-k">+</span>(f[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>),r),v<span class="pl-k">=</span>d<span class="pl-k">+</span>v<span class="pl-k">-</span><span class="pl-c1">2</span>,t<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(r,v),<span class="pl-c1">G</span><span class="pl-k">=</span>[],<span class="pl-c1">A</span><span class="pl-k">=</span>[],p<span class="pl-k">=</span><span class="pl-c1">2</span>;d<span class="pl-k">&lt;</span>t;<span class="pl-k">++</span>d,<span class="pl-k">++</span>p)d<span class="pl-k">&lt;</span>r<span class="pl-k">&amp;&amp;</span><span class="pl-c1">A</span>.<span class="pl-c1">push</span>(<span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,b[d],d)),d<span class="pl-k">&lt;</span>v<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>.<span class="pl-c1">push</span>(<span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span>,f[p],d));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Cb</span>(<span class="pl-c1">A</span>,<span class="pl-c1">G</span>);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-k">default</span>:<span class="pl-k">return</span>}e<span class="pl-k">=</span>h}}}};<span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">I</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">===</span>g)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>A &#39;pure&#39; computed must not be called recursively<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">B</span>[a]<span class="pl-k">=</span>c;<span class="pl-smi">c</span>.<span class="pl-smi">sa</span><span class="pl-k">=</span><span class="pl-c1">F</span><span class="pl-k">++</span>;<span class="pl-smi">c</span>.<span class="pl-smi">ea</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">Aa</span>()}function f(){var a,b;for(a in B)if(B.hasOwnProperty(a)&amp;&amp;(b=B[a],b.da.pc(b.ea)))return!0}function k(){!s&amp;&amp;B&amp;&amp;a.a.A(B,function(a,b){b.p&amp;&amp;b.p()});B=null;F=0;G=!0;s=r=!1}function h(){var a=g.throttleEvaluation;a&amp;&amp;0&lt;=a?(clearTimeout(z),z=setTimeout(function(){l(!0)},a)):g.nb?g.nb():l(!0)}function l(b){if(!v&amp;&amp;!G){if(y&amp;&amp;y()){if(!t){w();return}}else t=</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">B</span>,m<span class="pl-k">=</span><span class="pl-c1">F</span>,f<span class="pl-k">=</span><span class="pl-c1">I</span><span class="pl-k">?</span>p<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">F</span>;<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">xb</span>({<span class="pl-en">La</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">G</span><span class="pl-k">||</span>(m<span class="pl-k">&amp;&amp;</span>c[b]<span class="pl-k">?</span>(<span class="pl-en">e</span>(b,a,c[b]),<span class="pl-k">delete</span> c[b],<span class="pl-k">--</span>m)<span class="pl-k">:</span><span class="pl-c1">B</span>[b]<span class="pl-k">||</span><span class="pl-en">e</span>(b,a,s<span class="pl-k">?</span>{da<span class="pl-k">:</span>a}<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">U</span>(h)))},w<span class="pl-k">:</span>g,Ca<span class="pl-k">:</span>f});<span class="pl-c1">B</span><span class="pl-k">=</span>{};<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">try</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-c1">A</span>.<span class="pl-c1">call</span>(d)<span class="pl-k">:</span><span class="pl-en">A</span>()}<span class="pl-k">finally</span>{<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">end</span>(),m<span class="pl-k">&amp;&amp;!</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">p</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">p</span>()}),r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-smi">g</span>.<span class="pl-en">Wa</span>(n,l)<span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">||</span><span class="pl-en">q</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeChange<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span>l,s<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-en">Yb</span>()<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(n));f<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>awake<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">finally</span>{v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-en">w</span>()}}function g(){if(0&lt;arguments.length){if(&quot;function&quot;===typeof C)C.apply(d,arguments);else throw Error(&quot;Cannot write a value to a ko.computed unless you specify a &#39;write&#39; option. If you wish to read the current value, don&#39;t pass any parameters.&quot;);</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>}<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">Ob</span>(g);(r<span class="pl-k">||</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-en">f</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>();<span class="pl-k">return</span> n}function m(){(r&amp;&amp;!F||s&amp;&amp;f())&amp;&amp;l();return n}function x(){return r||0&lt;F}function q(a,b){g.notifySubscribers(a,b)}var n,r=!0,v=!1,t=!1,G=!1,A=b,I=!1,s=!1;A&amp;&amp;&quot;object&quot;==typeof A?(c=A,A=c.read):(c=c||{},A||(A=c.read));if(&quot;function&quot;!=typeof A)throw Error(&quot;Pass a function that returns the value of the ko.computed&quot;);var C=c.write,D=c.disposeWhenNodeIsRemoved||c.q||null,u=c.disposeWhen||c.Pa,y=u,w=k,B={},F=0,z=null;d||(d=c.owner);a.Q.call(g);a.a.Ga(g,a.j.fn);</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">B</span><span class="pl-k">=</span>m;<span class="pl-smi">g</span>.<span class="pl-en">oa</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">F</span>};<span class="pl-smi">g</span>.<span class="pl-smi">qc</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">C</span>;<span class="pl-smi">g</span>.<span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">w</span>()};<span class="pl-smi">g</span>.<span class="pl-smi">$</span><span class="pl-k">=</span>x;<span class="pl-k">var</span> <span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">Za</span>;<span class="pl-smi">g</span>.<span class="pl-en">Za</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">T</span>.<span class="pl-c1">call</span>(g,a);<span class="pl-smi">g</span>.<span class="pl-en">nb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">g</span>.<span class="pl-en">pb</span>(n);r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">g</span>.<span class="pl-en">qb</span>(g)}};<span class="pl-smi">c</span>.<span class="pl-smi">pure</span><span class="pl-k">?</span>(s<span class="pl-k">=</span><span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">g</span>.<span class="pl-en">ja</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">G</span><span class="pl-k">&amp;&amp;</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b){s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(r<span class="pl-k">||</span><span class="pl-en">f</span>())<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">l</span>();<span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(<span class="pl-c1">B</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){c[<span class="pl-smi">b</span>.<span class="pl-smi">sa</span>]<span class="pl-k">=</span>a});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">B</span>[a],g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">da</span>.<span class="pl-en">U</span>(h);<span class="pl-smi">g</span>.<span class="pl-smi">sa</span><span class="pl-k">=</span>b;<span class="pl-smi">g</span>.<span class="pl-smi">ea</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">ea</span>;<span class="pl-c1">B</span>[a]<span class="pl-k">=</span>g})}<span class="pl-c1">G</span><span class="pl-k">||</span><span class="pl-en">q</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>awake<span class="pl-pds">&quot;</span></span>)}},<span class="pl-smi">g</span>.<span class="pl-en">ua</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">G</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>b<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-en">Ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(<span class="pl-c1">B</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">p</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span>[a]<span class="pl-k">=</span>{da<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">da</span>,sa<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">sa</span>,ea<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">ea</span>},<span class="pl-smi">b</span>.<span class="pl-en">p</span>())}),</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">q</span>(p,<span class="pl-s"><span class="pl-pds">&quot;</span>asleep<span class="pl-pds">&quot;</span></span>))},<span class="pl-smi">g</span>.<span class="pl-smi">bc</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">Aa</span>,<span class="pl-smi">g</span>.<span class="pl-en">Aa</span><span class="pl-k">=</span><span class="pl-k">function</span>(){s<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">||</span><span class="pl-en">f</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>();<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-en">bc</span>()})<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">deferEvaluation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-en">ja</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>beforeChange<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>a<span class="pl-k">||</span><span class="pl-en">m</span>()});<span class="pl-smi">a</span>.<span class="pl-en">D</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>peek<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-c1">B</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-smi">p</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>isActive<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-smi">$</span>);<span class="pl-smi">a</span>.<span class="pl-en">D</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>getDependenciesCount<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-smi">oa</span>);<span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">D</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Qa</span>(<span class="pl-c1">D</span>)<span class="pl-k">||</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>()}));s<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">deferEvaluation</span><span class="pl-k">||</span><span class="pl-en">l</span>();<span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">x</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">w</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-en">Pb</span>(<span class="pl-c1">D</span>,w);<span class="pl-en">k</span>()},<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-en">fa</span>(<span class="pl-c1">D</span>,w));<span class="pl-k">return</span> g};<span class="pl-smi">a</span>.<span class="pl-en">sc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">Ta</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">j</span>)};z<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>.<span class="pl-smi">Ac</span>;<span class="pl-smi">a</span>.<span class="pl-smi">j</span>[z]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>;<span class="pl-smi">a</span>.<span class="pl-smi">j</span>.<span class="pl-smi">fn</span><span class="pl-k">=</span>{equalityComparer<span class="pl-k">:</span><span class="pl-c1">J</span>};</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">j</span>.<span class="pl-smi">fn</span>[z]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">j</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Fa</span>(<span class="pl-smi">a</span>.<span class="pl-smi">j</span>.<span class="pl-smi">fn</span>,<span class="pl-smi">a</span>.<span class="pl-c1">Q</span>.<span class="pl-smi">fn</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dependentObservable<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">j</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>computed<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">j</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isComputed<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">sc</span>);<span class="pl-smi">a</span>.<span class="pl-en">Nb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">w</span>(b,d,{pure<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">extend</span>({},b);<span class="pl-smi">b</span>.<span class="pl-smi">pure</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">w</span>(b,d)};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pureComputed<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Nb</span>);(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){k<span class="pl-k">=</span>k<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">c</span>;a<span class="pl-k">=</span><span class="pl-en">f</span>(a);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> a<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span>p<span class="pl-k">||</span>a <span class="pl-k">instanceof</span> <span class="pl-c1">Date</span><span class="pl-k">||</span>a <span class="pl-k">instanceof</span> <span class="pl-c1">String</span><span class="pl-k">||</span>a <span class="pl-k">instanceof</span> <span class="pl-c1">Number</span><span class="pl-k">||</span>a <span class="pl-k">instanceof</span> <span class="pl-c1">Boolean</span>)<span class="pl-k">return</span> a;<span class="pl-k">var</span> h<span class="pl-k">=</span>a <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span><span class="pl-k">?</span>[]<span class="pl-k">:</span>{};<span class="pl-smi">k</span>.<span class="pl-en">save</span>(a,h);<span class="pl-en">d</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(a[c]);<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> g){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>:h[c]<span class="pl-k">=</span>g;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">get</span>(g);h[c]<span class="pl-k">=</span>d<span class="pl-k">!==</span>p<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-en">b</span>(g,f,k)}});<span class="pl-k">return</span> h}function d(a,b){if(a instanceof Array){for(var c=0;c&lt;a.length;c++)b(c);&quot;function&quot;==typeof a.toJSON&amp;&amp;b(&quot;toJSON&quot;)}else for(c in a)b(c)}function c(){this.keys=[];this.mb=[]}a.Vb=function(c){if(0==arguments.length)throw Error(&quot;When calling ko.toJS, pass the object you want to convert.&quot;);return b(c,function(b){for(var c=0;a.F(b)&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">10</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)b<span class="pl-k">=</span><span class="pl-en">b</span>();<span class="pl-k">return</span> b})};<span class="pl-smi">a</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">Vb</span>(b);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">jb</span>(b,c,d)};<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">save</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(<span class="pl-c1">this</span>.<span class="pl-smi">keys</span>,b);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">mb</span>[d]<span class="pl-k">=</span>c<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">keys</span>.<span class="pl-c1">push</span>(b),<span class="pl-c1">this</span>.<span class="pl-smi">mb</span>.<span class="pl-c1">push</span>(c))},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(<span class="pl-c1">this</span>.<span class="pl-smi">keys</span>,b);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">mb</span>[b]<span class="pl-k">:</span>p}}})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toJS<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Vb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toJSON<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">toJSON</span>);(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">i</span><span class="pl-k">=</span>{<span class="pl-en">s</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b)){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">__ko__hasDomDataOptionValue__</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ab</span>)<span class="pl-k">:</span><span class="pl-c1">7</span><span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttributeNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttributeNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">specified</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">value</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">text</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[<span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span>])<span class="pl-k">:</span>p;<span class="pl-k">default</span>:<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">value</span>}},<span class="pl-en">Y</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b)){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>:<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> d){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ab</span>,p);<span class="pl-s"><span class="pl-pds">&quot;</span>__ko__hasDomDataOptionValue__<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">__ko__hasDomDataOptionValue__</span>;<span class="pl-smi">b</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>d;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ab</span>,d),<span class="pl-smi">b</span>.<span class="pl-smi">__ko__hasDomDataOptionValue__</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>d)d<span class="pl-k">=</span>p;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-c1">length</span>,</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">h;f<span class="pl-k">&lt;</span>k;<span class="pl-k">++</span>f)<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[f]),h<span class="pl-k">==</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">===</span>p){e<span class="pl-k">=</span>f;<span class="pl-k">break</span>}<span class="pl-k">if</span>(c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e<span class="pl-k">||</span>d<span class="pl-k">===</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span>)<span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span><span class="pl-k">=</span>e;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">||</span>d<span class="pl-k">===</span>p)d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">b</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>d}}}})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectExtensions<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">i</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectExtensions.readValue<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-smi">s</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectExtensions.writeValue<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-c1">Y</span>);<span class="pl-smi">a</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ib</span>(b);<span class="pl-c1">123</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">match</span>(e),x,h<span class="pl-k">=</span>[],n<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(d){<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">0</span>,v;v<span class="pl-k">=</span>d[r];<span class="pl-k">++</span>r){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-c1">44</span><span class="pl-k">===</span>t){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>{key<span class="pl-k">:</span>x,</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">value<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">:</span>{unknown<span class="pl-k">:</span>x<span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)});x<span class="pl-k">=</span>n<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">=</span>[];<span class="pl-k">continue</span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">58</span><span class="pl-k">===</span>t){<span class="pl-k">if</span>(<span class="pl-k">!</span>n<span class="pl-k">&amp;&amp;!</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>){x<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">pop</span>();<span class="pl-k">continue</span>}}<span class="pl-k">else</span> <span class="pl-c1">47</span><span class="pl-k">===</span>t<span class="pl-k">&amp;&amp;</span>r<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(t<span class="pl-k">=</span>d[r<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">match</span>(f))<span class="pl-k">&amp;&amp;!</span>k[t[<span class="pl-c1">0</span>]]<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(<span class="pl-smi">b</span>.<span class="pl-c1">indexOf</span>(v)<span class="pl-k">+</span><span class="pl-c1">1</span>),d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">match</span>(e),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,v<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">40</span><span class="pl-k">===</span>t<span class="pl-k">||</span><span class="pl-c1">123</span><span class="pl-k">===</span>t<span class="pl-k">||</span><span class="pl-c1">91</span><span class="pl-k">===</span>t<span class="pl-k">?</span><span class="pl-k">++</span>n<span class="pl-k">:</span><span class="pl-c1">41</span><span class="pl-k">===</span>t<span class="pl-k">||</span><span class="pl-c1">125</span><span class="pl-k">===</span>t<span class="pl-k">||</span><span class="pl-c1">93</span><span class="pl-k">===</span>t<span class="pl-k">?</span><span class="pl-k">--</span>n<span class="pl-k">:</span>x<span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">34</span><span class="pl-k">!==</span>t<span class="pl-k">&amp;&amp;</span><span class="pl-c1">39</span><span class="pl-k">!==</span>t<span class="pl-k">||</span>(v<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(v)}}<span class="pl-k">return</span> c}<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>null<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>],c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(?:<span class="pl-c1">[$_<span class="pl-c1">a-z</span>][$<span class="pl-c1">\w</span>]</span><span class="pl-k">*</span><span class="pl-k">|</span>(<span class="pl-c1">.</span><span class="pl-k">+</span>)(<span class="pl-cce">\.</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-c1">[$_<span class="pl-c1">a-z</span>][$<span class="pl-c1">\w</span>]</span><span class="pl-k">*</span><span class="pl-k">|</span><span class="pl-cce">\[</span><span class="pl-c1">.</span><span class="pl-k">+</span><span class="pl-cce">\]</span>))<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,e<span class="pl-k">=</span><span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\&quot;</span>(?:[^<span class="pl-cce">\&quot;\\\\</span>]|<span class="pl-cce">\\\\</span>.)*<span class="pl-cce">\&quot;</span>|&#39;(?:[^&#39;<span class="pl-cce">\\\\</span>]|<span class="pl-cce">\\\\</span>.)*&#39;|/(?:[^/<span class="pl-cce">\\\\</span>]|<span class="pl-cce">\\\\</span>.)*/w*|[^<span class="pl-cce">\\</span>s:,/][^,<span class="pl-cce">\&quot;</span>&#39;{}()/:[<span class="pl-cce">\\</span>]]*[^<span class="pl-cce">\\</span>s,<span class="pl-cce">\&quot;</span>&#39;{}()/:[<span class="pl-cce">\\</span>]]|[^<span class="pl-cce">\\</span>s]<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\]</span>)&quot;&#39;<span class="pl-c1">A-Za-z0-9</span>_$]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,k<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>return<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>typeof<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>},h<span class="pl-k">=</span>{};<span class="pl-k">return</span>{ka<span class="pl-k">:</span>[],<span class="pl-c1">V</span><span class="pl-k">:</span>h,bb<span class="pl-k">:</span>b,<span class="pl-en">Ea</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){<span class="pl-k">function</span> <span class="pl-en">m</span>(<span class="pl-smi">b</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> e;<span class="pl-k">if</span>(<span class="pl-k">!</span>r){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBindingHandler</span>(b);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">preprocess</span><span class="pl-k">&amp;&amp;!</span>(g<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">preprocess</span>(g,b,m)))<span class="pl-k">return</span>;<span class="pl-k">if</span>(l<span class="pl-k">=</span>h[b])e<span class="pl-k">=</span>g,<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(d,e)<span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>(l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">match</span>(c),e<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">===</span>l<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>l[<span class="pl-c1">1</span>]<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Object(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l[<span class="pl-c1">2</span>]<span class="pl-k">:</span>e),l<span class="pl-k">=</span>e;l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;:function(_z){<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=_z}<span class="pl-pds">&quot;</span></span>)}n<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function(){return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> }<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g)}g<span class="pl-k">=</span>g<span class="pl-k">||</span>{};<span class="pl-k">var</span> f<span class="pl-k">=</span>[],k<span class="pl-k">=</span>[],n<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">valueAccessors</span>,r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">bindingParams</span>,v<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> e<span class="pl-k">?</span><span class="pl-en">b</span>(e)<span class="pl-k">:</span>e;</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(v,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">m</span>(<span class="pl-smi">a</span>.<span class="pl-smi">key</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">unknown</span>,<span class="pl-smi">a</span>.<span class="pl-c1">value</span>)});<span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">m</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_ko_property_writers<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> }<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">vc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c].<span class="pl-smi">key</span><span class="pl-k">==</span>b)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">ra</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">F</span>(b))<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-en">Da</span>(b)<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">B</span>()<span class="pl-k">===</span>e<span class="pl-k">||</span><span class="pl-en">b</span>(e);<span class="pl-k">else</span> <span class="pl-k">if</span>((b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_ko_property_writers<span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span>b[d])b[d](e)}}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expressionRewriting<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expressionRewriting.bindingRewriteValidators<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">ka</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expressionRewriting.parseObjectLiteral<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">bb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expressionRewriting.preProcessBindings<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">Ea</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expressionRewriting._twoWayBindings<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-c1">V</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>jsonExpressionRewriting<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>jsonExpressionRewriting.insertPropertyAccessorsIntoJson<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">Ea</span>);(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">8</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">test</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeValue</span>)}function d(a){return 8==a.nodeType&amp;&amp;h.test(f?a.text:a.nodeValue)}function c(a,c){for(var e=a,f=1,l=[];e=e.nextSibling;){if(d(e)&amp;&amp;(f--,0===f))return l;l.push(e);b(e)&amp;&amp;f++}if(!c)throw Error(&quot;Cannot find closing comment tag to match: &quot;+a.nodeValue);return null}function e(a,</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">b){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">c</span>(a,b);<span class="pl-k">return</span> d<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>d[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">nextSibling</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">:</span><span class="pl-c1">null</span>}<span class="pl-k">var</span> f<span class="pl-k">=</span>w<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>3c!--test--<span class="pl-cce">\x</span>3e<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">w</span>.<span class="pl-c1">createComment</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>test<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">text</span>,k<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\x</span>3c!--<span class="pl-c1">\s</span><span class="pl-k">*</span>ko(?:<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">+</span>))<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-k">*</span>--<span class="pl-cce">\x</span>3e<span class="pl-k">$</span><span class="pl-pds">/</span></span><span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>ko(?:<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">+</span>))<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,h<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\x</span>3c!--<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\/</span>ko<span class="pl-c1">\s</span><span class="pl-k">*</span>--<span class="pl-cce">\x</span>3e<span class="pl-k">$</span><span class="pl-pds">/</span></span><span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\/</span>ko<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,l<span class="pl-k">=</span>{ul<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,ol<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">a</span>.<span class="pl-smi">e</span><span class="pl-k">=</span>{<span class="pl-c1">R</span><span class="pl-k">:</span>{},<span class="pl-en">childNodes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">b</span>(a)<span class="pl-k">?</span><span class="pl-en">c</span>(a)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>},<span class="pl-en">ma</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-en">b</span>(c)){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>(c);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">removeNode</span>(c[d])}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ra</span>(c)},<span class="pl-en">T</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-en">b</span>(c)){<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">ma</span>(c);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">nextSibling</span>,</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>l;f<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(d[f],e)}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">T</span>(c,d)},<span class="pl-en">Mb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-en">b</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">firstChild</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">insertBefore</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">firstChild</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(c)},<span class="pl-en">Fb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){e<span class="pl-k">?</span><span class="pl-en">b</span>(c)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(d,<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">insertBefore</span>(d,<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(d)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">Mb</span>(c,d)},<span class="pl-en">firstChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">b</span>(a)<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">||</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span>)<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">firstChild</span>},<span class="pl-en">nextSibling</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">b</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">e</span>(a));<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span>)<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span>},oc<span class="pl-k">:</span>b,<span class="pl-en">Fc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeValue</span>).<span class="pl-c1">match</span>(k))<span class="pl-k">?</span>a[<span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">Kb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(l[<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(c)]){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">firstChild</span>;<span class="pl-k">if</span>(m){<span class="pl-k">do</span> <span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">m</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">var</span> f;f<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">firstChild</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(f){<span class="pl-k">do</span> <span class="pl-k">if</span>(h)<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">b</span>(f)){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-en">e</span>(f,<span class="pl-k">!</span><span class="pl-c1">0</span>);k<span class="pl-k">?</span>f<span class="pl-k">=</span>k<span class="pl-k">:</span>h<span class="pl-k">=</span>[f]}<span class="pl-k">else</span> <span class="pl-en">d</span>(f)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>[f]);<span class="pl-k">while</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">nextSibling</span>)}<span class="pl-k">if</span>(f<span class="pl-k">=</span>h)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">nextSibling</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;k<span class="pl-k">++</span>)h<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">insertBefore</span>(f[k],h)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(f[k])}<span class="pl-k">while</span>(m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">nextSibling</span>)}}}}})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">e</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements.allowedBindings<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements.emptyNode<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-smi">ma</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements.insertAfter<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-smi">Fb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements.prepend<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-smi">Mb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>virtualElements.setDomNodeChildren<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">T</span>);(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">L</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">ec</span><span class="pl-k">=</span>{}};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">extend</span>(<span class="pl-smi">a</span>.<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">nodeHasBindings</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-bind<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">getComponentNameForNode</span>(b);<span class="pl-k">case</span> <span class="pl-c1">8</span>:<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">oc</span>(b);<span class="pl-k">default</span>:<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},<span class="pl-en">getBindings</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getBindingsString</span>(b,d),c<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">parseBindingsString</span>(c,</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">d,b)<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">sb</span>(c,b,d,<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">getBindingAccessors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getBindingsString</span>(b,d),c<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">parseBindingsString</span>(c,d,b,{valueAccessors<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">sb</span>(c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">getBindingsString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-bind<span class="pl-pds">&quot;</span></span>);<span class="pl-k">case</span> <span class="pl-c1">8</span>:<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">Fc</span>(b);<span class="pl-k">default</span>:<span class="pl-k">return</span> <span class="pl-c1">null</span>}},<span class="pl-en">parseBindingsString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span>,k<span class="pl-k">=</span>b<span class="pl-k">+</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">valueAccessors</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),h;<span class="pl-k">if</span>(<span class="pl-k">!</span>(h<span class="pl-k">=</span>f[k])){<span class="pl-k">var</span> l,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>with($context){with($data||{}){return{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">Ea</span>(b,e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}}}<span class="pl-pds">&quot;</span></span>;l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$context<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>$element<span class="pl-pds">&quot;</span></span>,g);h<span class="pl-k">=</span>f[k]<span class="pl-k">=</span>l}<span class="pl-k">return</span> <span class="pl-en">h</span>(d,c)}<span class="pl-k">catch</span>(m){<span class="pl-k">throw</span> <span class="pl-smi">m</span>.<span class="pl-smi">message</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unable to parse bindings.<span class="pl-cce">\n</span>Bindings value: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Message: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">message</span>,m;}}});<span class="pl-smi">a</span>.<span class="pl-c1">L</span>.<span class="pl-smi">instance</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.L</span>})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bindingProvider<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">L</span>);(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> a}}function d(a){return a()}function c(b){return a.a.pa(a.k.u(b),function(a,c){return function(){return b()[c]}})}function e(d,g,e){return&quot;function&quot;===typeof d?c(d.bind(null,g,e)):a.a.pa(d,b)}function f(a,b){return c(this.getBindings.bind(this,a,b))}function k(b,</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">c,d){<span class="pl-k">var</span> g,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">firstChild</span>(c),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">L</span>.<span class="pl-smi">instance</span>,m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">preprocessNode</span>;<span class="pl-k">if</span>(m){<span class="pl-k">for</span>(;g<span class="pl-k">=</span>e;)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>(g),<span class="pl-smi">m</span>.<span class="pl-c1">call</span>(f,g);e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">firstChild</span>(c)}<span class="pl-k">for</span>(;g<span class="pl-k">=</span>e;)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>(g),<span class="pl-en">h</span>(b,g,d)}function h(b,c,d){var e=!0,f=1===c.nodeType;f&amp;&amp;a.e.Kb(c);if(f&amp;&amp;d||a.L.instance.nodeHasBindings(c))e=g(c,null,b,d).shouldBindDescendants;e&amp;&amp;!x[a.a.v(c)]&amp;&amp;k(b,c,!f)}function l(b){var c=[],d={},g=[];a.a.A(b,function I(e){if(!d[e]){var f=a.getBindingHandler(e);f&amp;&amp;(f.after&amp;&amp;(g.push(e),a.a.o(f.after,function(c){if(b[c]){if(-1!==a.a.m(g,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">c))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot combine the following bindings, because they have a cyclic dependency: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>));<span class="pl-en">I</span>(c)}}),<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">--</span>),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>({key<span class="pl-k">:</span>e,Eb<span class="pl-k">:</span>f}));d[e]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}});<span class="pl-k">return</span> c}function g(b,c,g,e){var m=a.a.f.get(b,q);if(!c){if(m)throw Error(&quot;You cannot apply bindings multiple times to the same element.&quot;);a.a.f.set(b,q,!0)}!m&amp;&amp;e&amp;&amp;a.Tb(b,g);var h;if(c&amp;&amp;&quot;function&quot;!==typeof c)h=c;else{var k=a.L.instance,x=k.getBindingAccessors||f,n=a.j(function(){(h=c?c(g,b):x.call(k,b,g))&amp;&amp;g.K&amp;&amp;g.K();return h},null,{q:b});</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-en">$</span>()<span class="pl-k">||</span>(n<span class="pl-k">=</span><span class="pl-c1">null</span>)}<span class="pl-k">var</span> u;<span class="pl-k">if</span>(h){<span class="pl-k">var</span> w<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">d</span>(<span class="pl-en">n</span>()[a])}}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h[a]},<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">pa</span>(n<span class="pl-k">?</span><span class="pl-en">n</span>()<span class="pl-k">:</span>h,d)};<span class="pl-smi">y</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h[a]<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(<span class="pl-en">w</span>(a))};<span class="pl-smi">y</span>.<span class="pl-en">has</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a <span class="pl-k">in</span> h};e<span class="pl-k">=</span><span class="pl-en">l</span>(h);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">Eb</span>.<span class="pl-smi">init</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">Eb</span>.<span class="pl-smi">update</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">key</span>;<span class="pl-k">if</span>(<span class="pl-c1">8</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>[f])<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>The binding &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; cannot be used with virtual elements<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">d</span>(b,<span class="pl-en">w</span>(f),y,<span class="pl-smi">g</span>.<span class="pl-smi">$data</span>,g);<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">controlsDescendantBindings</span>){<span class="pl-k">if</span>(u<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">p)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Multiple bindings (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>u<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> and <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.<span class="pl-pds">&quot;</span></span>);u<span class="pl-k">=</span>f}}),<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">j</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(b,<span class="pl-en">w</span>(f),y,<span class="pl-smi">g</span>.<span class="pl-smi">$data</span>,g)},<span class="pl-c1">null</span>,{q<span class="pl-k">:</span>b})}<span class="pl-k">catch</span>(m){<span class="pl-k">throw</span> <span class="pl-smi">m</span>.<span class="pl-smi">message</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>Unable to process binding &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h[f]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-cce">\n</span>Message: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">message</span>,m;}})}<span class="pl-k">return</span>{shouldBindDescendants<span class="pl-k">:</span>u<span class="pl-k">===</span>p}}function m(b){return b&amp;&amp;b instanceof a.N?b:new a.N(b)}a.d={};var x={script:!0,textarea:!0};a.getBindingHandler=function(b){return a.d[b]};</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">N</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-en">F</span>(b),m,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">j</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> m<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-en">b</span>()<span class="pl-k">:</span>b,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(m);c<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">K</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">extend</span>(e,c),l<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">K</span><span class="pl-k">=</span>l))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-smi">$parents</span><span class="pl-k">=</span>[],<span class="pl-smi">e</span>.<span class="pl-smi">$root</span><span class="pl-k">=</span>h,<span class="pl-smi">e</span>.<span class="pl-smi">ko</span><span class="pl-k">=</span>a);<span class="pl-smi">e</span>.<span class="pl-smi">$rawData</span><span class="pl-k">=</span>m;<span class="pl-smi">e</span>.<span class="pl-smi">$data</span><span class="pl-k">=</span>h;d<span class="pl-k">&amp;&amp;</span>(e[d]<span class="pl-k">=</span>h);g<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(e,c,h);<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">$data</span>},<span class="pl-c1">null</span>,{<span class="pl-en">Pa</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> m<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">tb</span>(m)},q<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">l</span>.<span class="pl-en">$</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">K</span><span class="pl-k">=</span>l,<span class="pl-smi">l</span>.<span class="pl-smi">equalityComparer</span><span class="pl-k">=</span><span class="pl-c1">null</span>,m<span class="pl-k">=</span>[],<span class="pl-smi">l</span>.<span class="pl-en">Zb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-en">fa</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ya</span>(m,b);<span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>(<span class="pl-smi">l</span>.<span class="pl-en">p</span>(),<span class="pl-smi">e</span>.<span class="pl-c1">K</span><span class="pl-k">=</span>l<span class="pl-k">=</span>p)})})};<span class="pl-smi">a</span>.<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">createChildContext</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">a.N</span>(b,<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">$parentContext</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">$parent</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">$data</span>;<span class="pl-smi">a</span>.<span class="pl-smi">$parents</span><span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-smi">$parents</span><span class="pl-k">||</span>[]).<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">$parents</span>.<span class="pl-c1">unshift</span>(<span class="pl-smi">a</span>.<span class="pl-smi">$parent</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(a)})};<span class="pl-smi">a</span>.<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">a.N</span>(<span class="pl-c1">this</span>.<span class="pl-c1">K</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">$data</span>,<span class="pl-c1">this</span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">c</span>.<span class="pl-smi">$rawData</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">$rawData</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">extend</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-en">b</span>()<span class="pl-k">:</span>b)})};<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>(),n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>();<span class="pl-smi">a</span>.<span class="pl-en">Tb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,n,c),<span class="pl-smi">c</span>.<span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">K</span>.<span class="pl-en">Zb</span>(b);<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(b,n)};<span class="pl-smi">a</span>.<span class="pl-en">va</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">Kb</span>(b);<span class="pl-k">return</span> <span class="pl-en">g</span>(b,c,<span class="pl-en">m</span>(d),<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-en">cc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-en">m</span>(d);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">va</span>(b,<span class="pl-en">e</span>(c,d,b),d)};<span class="pl-smi">a</span>.<span class="pl-en">Ja</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-en">k</span>(<span class="pl-en">m</span>(a),b,<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-en">ub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">!</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-smi">jQuery</span><span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">jQuery</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-smi">y</span>.<span class="pl-smi">document</span>.<span class="pl-c1">body</span>;<span class="pl-en">h</span>(<span class="pl-en">m</span>(a),b,<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-en">Oa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">case</span> <span class="pl-c1">8</span>:<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">Tb</span>(b);<span class="pl-k">if</span>(c)<span class="pl-k">return</span> c;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parentNode</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">Oa</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parentNode</span>)}<span class="pl-k">return</span> p};<span class="pl-smi">a</span>.<span class="pl-en">gc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">Oa</span>(b))<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">$data</span><span class="pl-k">:</span>p};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bindingHandlers<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>applyBindings<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">ub</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>applyBindingsToDescendants<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Ja</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>applyBindingAccessorsToNode<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">va</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>applyBindingsToNode<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">cc</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contextFor<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Oa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dataFor<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">gc</span>)})();(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">hasOwnProperty</span>(d)<span class="pl-k">?</span>f[d]<span class="pl-k">:</span>b,m;g<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-en">U</span>(e)<span class="pl-k">:</span>(g<span class="pl-k">=</span>f[d]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.Q</span>,<span class="pl-smi">g</span>.<span class="pl-en">U</span>(e),<span class="pl-en">c</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">synchronous</span>);k[d]<span class="pl-k">=</span>{definition<span class="pl-k">:</span>a,tc<span class="pl-k">:</span>c};<span class="pl-k">delete</span> f[d];m<span class="pl-k">||</span>c<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-en">notifySubscribers</span>(a)<span class="pl-k">:</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">g</span>.<span class="pl-en">notifySubscribers</span>(a)},<span class="pl-c1">0</span>)}),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}function c(a,b){e(&quot;getConfig&quot;,</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">[a],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">?</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>loadComponent<span class="pl-pds">&quot;</span></span>,[a,c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">b</span>(a,c)})<span class="pl-k">:</span><span class="pl-en">b</span>(<span class="pl-c1">null</span>,<span class="pl-c1">null</span>)})}function e(c,d,g,f){f||(f=a.g.loaders.slice(0));var k=f.shift();if(k){var q=k[c];if(q){var n=!1;if(q.apply(k,d.concat(function(a){n?g(null):null!==a?g(a):e(c,d,g,f)}))!==b&amp;&amp;(n=!0,!k.suppressLoaderExceptions))throw Error(&quot;Component loaders must supply values by invoking the callback, not by returning values synchronously.&quot;);}else e(c,d,g,f)}else g(null)}var f={},k={};a.g={get:function(c,e){var g=k.hasOwnProperty(c)?k[c]:</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">b;g<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-smi">tc</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(<span class="pl-smi">g</span>.<span class="pl-smi">definition</span>)})<span class="pl-k">:</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(<span class="pl-smi">g</span>.<span class="pl-smi">definition</span>)},<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">d</span>(c,e)},<span class="pl-en">zb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> k[a]},ob<span class="pl-k">:</span>e};<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">loaders</span><span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.get<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">get</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.clearCachedDefinition<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">zb</span>)})();(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(){<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-k">--</span>v<span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(h)}<span class="pl-k">var</span> h<span class="pl-k">=</span>{},v<span class="pl-k">=</span><span class="pl-c1">2</span>,t<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">template</span>;d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">viewModel</span>;t<span class="pl-k">?</span><span class="pl-en">f</span>(c,t,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">ob</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>loadTemplate<span class="pl-pds">&quot;</span></span>,[b,c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">h</span>.<span class="pl-smi">template</span><span class="pl-k">=</span>a;<span class="pl-en">k</span>()})})<span class="pl-k">:</span><span class="pl-en">k</span>();d<span class="pl-k">?</span><span class="pl-en">f</span>(c,d,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">ob</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>loadViewModel<span class="pl-pds">&quot;</span></span>,[b,c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){h[l]<span class="pl-k">=</span>a;<span class="pl-en">k</span>()})})<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-en">k</span>()}function d(a,b,c){if(&quot;function&quot;===typeof b)c(function(a){return new b(a)});else if(&quot;function&quot;===typeof b[l])c(b[l]);else if(&quot;instance&quot;in b){var e=b.instance;c(function(){return e})}else&quot;viewModel&quot;in b?d(a,b.viewModel,c):a(&quot;Unknown viewModel value: &quot;+b)}function c(b){switch(a.a.v(b)){case &quot;script&quot;:return a.a.ca(b.text);case &quot;textarea&quot;:return a.a.ca(b.value);case &quot;template&quot;:if(e(b.content))return a.a.la(b.content.childNodes)}return a.a.la(b.childNodes)}function e(a){return y.DocumentFragment?a instanceof</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">DocumentFragment</span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">11</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span>}function f(a,b,c){&quot;string&quot;===typeof b.require?O||y.require?(O||y.require)([b.require],c):a(&quot;Uses require, but no AMD loader is present&quot;):c(b)}function k(a){return function(b){throw Error(&quot;Component &#39;&quot;+a+&quot;&#39;: &quot;+b);}}var h={};a.g.register=function(b,c){if(!c)throw Error(&quot;Invalid configuration for &quot;+b);if(a.g.Xa(b))throw Error(&quot;Component &quot;+b+&quot; is already registered&quot;);h[b]=c};a.g.Xa=function(a){return a in h};a.g.Ec=function(b){delete h[b];a.g.zb(b)};a.g.Ab={getConfig:function(a,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">b){<span class="pl-en">b</span>(<span class="pl-smi">h</span>.<span class="pl-en">hasOwnProperty</span>(a)<span class="pl-k">?</span>h[a]<span class="pl-k">:</span><span class="pl-c1">null</span>)},<span class="pl-en">loadComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">k</span>(a);<span class="pl-en">f</span>(e,c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-en">b</span>(a,e,c,d)})},<span class="pl-en">loadTemplate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){b<span class="pl-k">=</span><span class="pl-en">k</span>(b);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d)<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ca</span>(d));<span class="pl-k">else</span> <span class="pl-k">if</span>(d <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>)<span class="pl-en">f</span>(d);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">e</span>(d))<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">d</span>.<span class="pl-c1">childNodes</span>));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">element</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>,<span class="pl-smi">y</span>.<span class="pl-smi">HTMLElement</span><span class="pl-k">?</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLElement</span><span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">tagName</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeType</span>)<span class="pl-en">f</span>(<span class="pl-en">c</span>(d));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">getElementById</span>(d);l<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-en">c</span>(l))<span class="pl-k">:</span><span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot find element with ID <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d)}<span class="pl-k">else</span> <span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown element type: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d);<span class="pl-k">else</span> <span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown template value: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">d)},<span class="pl-en">loadViewModel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">d</span>(<span class="pl-en">k</span>(a),b,c)}};<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>createViewModel<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.register<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">register</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.isRegistered<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">Xa</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.unregister<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">Ec</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>components.defaultLoader<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">Ab</span>);<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">loaders</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">Ab</span>);<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">$b</span><span class="pl-k">=</span>h})();(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>params<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(f){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">parseBindingsString</span>(f,e,b,{valueAccessors<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,bindingParams<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">pa</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">w</span>(d,<span class="pl-c1">null</span>,{q<span class="pl-k">:</span>b})}),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">pa</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">B</span>();<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">$</span>()<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">w</span>({<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>())},</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">write<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">Da</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">d</span>()(a)},q<span class="pl-k">:</span>b})<span class="pl-k">:</span>e});<span class="pl-smi">k</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$raw<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-smi">k</span>.<span class="pl-smi">$raw</span><span class="pl-k">=</span>f);<span class="pl-k">return</span> k}<span class="pl-k">return</span>{$raw<span class="pl-k">:</span>{}}}<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">getComponentNameForNode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">Xa</span>(b)<span class="pl-k">&amp;&amp;</span>b};<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">sb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">getComponentNameForNode</span>(d);<span class="pl-k">if</span>(h){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">component</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Cannot use the &quot;component&quot; binding on a custom element matching a component<span class="pl-pds">&#39;</span></span>);<span class="pl-k">var</span> l<span class="pl-k">=</span>{name<span class="pl-k">:</span>h,params<span class="pl-k">:</span><span class="pl-en">b</span>(d,f)};<span class="pl-smi">c</span>.<span class="pl-smi">component</span><span class="pl-k">=</span>k<span class="pl-k">?</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> l}<span class="pl-k">:</span>l}}<span class="pl-k">return</span> c};<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.L</span>;<span class="pl-c1">9</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-en">register</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">w</span>.<span class="pl-c1">createElement</span>(b);</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)}}(<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">register</span>),<span class="pl-smi">w</span>.<span class="pl-en">createDocumentFragment</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">b</span>(),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-smi">$b</span>,k;<span class="pl-k">for</span>(k <span class="pl-k">in</span> f)<span class="pl-smi">f</span>.<span class="pl-en">hasOwnProperty</span>(k)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">createElement</span>(k);<span class="pl-k">return</span> d}}(<span class="pl-smi">w</span>.<span class="pl-smi">createDocumentFragment</span>))})();(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">template</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Component &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; has no template<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">la</span>(c);<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">T</span>(d,b)}function c(a,b,c,d){var e=a.createViewModel;return e?e.call(a,d,{element:b,templateNodes:c}):d}var e=0;a.d.component={init:function(f,k,h,l,g){function m(){var a=x&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">x</span>.<span class="pl-smi">dispose</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(x);q<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">var</span> x,q,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>(f));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">C</span>.<span class="pl-en">fa</span>(f,m);<span class="pl-smi">a</span>.<span class="pl-en">w</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">k</span>()),h,t;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> l<span class="pl-k">?</span>h<span class="pl-k">=</span>l<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">l</span>.<span class="pl-c1">name</span>),t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">l</span>.<span class="pl-smi">params</span>));<span class="pl-k">if</span>(<span class="pl-k">!</span>h)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>No component name specified<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> p<span class="pl-k">=</span>q<span class="pl-k">=</span><span class="pl-k">++</span>e;<span class="pl-smi">a</span>.<span class="pl-smi">g</span>.<span class="pl-c1">get</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(q<span class="pl-k">===</span>p){<span class="pl-en">m</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown component &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);<span class="pl-en">d</span>(h,e,f);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-en">c</span>(e,f,n,t);e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">createChildContext</span>(l,b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">$component</span><span class="pl-k">=</span>l;<span class="pl-smi">a</span>.<span class="pl-smi">$componentTemplateNodes</span><span class="pl-k">=</span>n});x<span class="pl-k">=</span>l;<span class="pl-smi">a</span>.<span class="pl-en">Ja</span>(e,f)}})},<span class="pl-c1">null</span>,{q<span class="pl-k">:</span>f});<span class="pl-k">return</span>{controlsDescendantBindings<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>.<span class="pl-smi">component</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})();<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>className<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>for<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>htmlFor<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">attr</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>())<span class="pl-k">||</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">||</span>d<span class="pl-k">===</span>p;k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">removeAttribute</span>(c);<span class="pl-c1">8</span><span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">&amp;&amp;</span>c <span class="pl-k">in</span> <span class="pl-c1">P</span><span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">P</span>[c],k<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">removeAttribute</span>(c)<span class="pl-k">:</span>b[c]<span class="pl-k">=</span>d)<span class="pl-k">:</span>k<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">setAttribute</span>(c,<span class="pl-smi">d</span>.<span class="pl-c1">toString</span>());<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Rb</span>(b,k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">toString</span>())})}};(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">checked</span><span class="pl-k">=</span>{after<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">checked</span>,f<span class="pl-k">=</span>x<span class="pl-k">?</span><span class="pl-en">k</span>()<span class="pl-k">:</span>e;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">Z</span>.<span class="pl-en">Ca</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>l<span class="pl-k">||</span>e)){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(d);g<span class="pl-k">?</span>m<span class="pl-k">!==</span>f<span class="pl-k">?</span>(e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ga</span>(h,</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">f,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ga</span>(h,m,<span class="pl-k">!</span><span class="pl-c1">1</span>)),m<span class="pl-k">=</span>f)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ga</span>(h,f,e)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">ra</span>(h,c,<span class="pl-s"><span class="pl-pds">&quot;</span>checked<span class="pl-pds">&quot;</span></span>,f,<span class="pl-k">!</span><span class="pl-c1">0</span>)}}function f(){var c=a.a.c(d());b.checked=g?0&lt;=a.a.m(c,k()):h?c:k()===c}var k=a.Nb(function(){return c.has(&quot;checkedValue&quot;)?a.a.c(c.get(&quot;checkedValue&quot;)):c.has(&quot;value&quot;)?a.a.c(c.get(&quot;value&quot;)):b.value}),h=&quot;checkbox&quot;==b.type,l=&quot;radio&quot;==b.type;if(h||l){var g=h&amp;&amp;a.a.c(d())instanceof Array,m=g?k():p,x=l||g;l&amp;&amp;!b.name&amp;&amp;a.d.uniqueName.init(b,function(){return!0});a.w(e,null,{q:b});a.a.n(b,&quot;click&quot;,e);a.w(f,null,{q:b})}}};a.h.V.checked=!0;a.d.checkedValue=</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>())}}})();<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">css</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ia</span>(b,c,d)})<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-c1">String</span>(c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ia</span>(b,<span class="pl-smi">b</span>.<span class="pl-smi">__ko__cssValue</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">__ko__cssValue</span><span class="pl-k">=</span>c,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ia</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">0</span>))}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">enable</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>());c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">disabled</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>disabled<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>c<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">disabled</span><span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-c1">disabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">disable</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">enable</span>.<span class="pl-en">update</span>(b,<span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>())})}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">event</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-en">d</span>()<span class="pl-k">||</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(k,<span class="pl-k">function</span>(<span class="pl-smi">h</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,h,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> g,m<span class="pl-k">=</span><span class="pl-en">d</span>()[h];<span class="pl-k">if</span>(m){<span class="pl-k">try</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-c1">arguments</span>);e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">$data</span>;<span class="pl-smi">k</span>.<span class="pl-c1">unshift</span>(e);g<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">apply</span>(e,k)}<span class="pl-k">finally</span>{<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>()<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">returnValue</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Bubble<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">cancelBubble</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">stopPropagation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">stopPropagation</span>())}})})}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">foreach</span><span class="pl-k">=</span>{<span class="pl-en">Ib</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">b</span>(),c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">cb</span>(d);<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span>{foreach<span class="pl-k">:</span>d,templateEngine<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-smi">Va</span>};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d);<span class="pl-k">return</span>{foreach<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">data</span>,as<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">as</span>,</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">includeDestroyed<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">includeDestroyed</span>,afterAdd<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">afterAdd</span>,beforeRemove<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">beforeRemove</span>,afterRender<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">afterRender</span>,beforeMove<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">beforeMove</span>,afterMove<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">afterMove</span>,templateEngine<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-smi">Va</span>}}},<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">template</span>.<span class="pl-en">init</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">foreach</span>.<span class="pl-en">Ib</span>(d))},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">template</span>.<span class="pl-en">update</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">foreach</span>.<span class="pl-en">Ib</span>(d),c,e,f)}};<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">ka</span>.<span class="pl-smi">foreach</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>.<span class="pl-smi">foreach</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">hasfocus</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">e</span>){<span class="pl-smi">b</span>.<span class="pl-smi">__ko_hasfocusUpdating</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>activeElement<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> f){<span class="pl-k">var</span> g;<span class="pl-k">try</span>{g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">activeElement</span>}<span class="pl-k">catch</span>(m){g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-c1">body</span>}e<span class="pl-k">=</span>g<span class="pl-k">===</span>b}f<span class="pl-k">=</span><span class="pl-en">d</span>();<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">ra</span>(f,c,<span class="pl-s"><span class="pl-pds">&quot;</span>hasfocus<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-smi">__ko_hasfocusLastValue</span><span class="pl-k">=</span>e;<span class="pl-smi">b</span>.<span class="pl-smi">__ko_hasfocusUpdating</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">bind</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">bind</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>,f);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>focusin<span class="pl-pds">&quot;</span></span>,f);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,k);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>focusout<span class="pl-pds">&quot;</span></span>,k)},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>());<span class="pl-smi">b</span>.<span class="pl-smi">__ko_hasfocusUpdating</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">__ko_hasfocusLastValue</span><span class="pl-k">===</span>c<span class="pl-k">||</span>(c<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">focus</span>()<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">blur</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">qa</span>,<span class="pl-c1">null</span>,[b,c<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>focusin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>focusout<span class="pl-pds">&quot;</span></span>]))}};<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-c1">V</span>.<span class="pl-smi">hasfocus</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">hasFocus</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">hasfocus</span>;<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-c1">V</span>.<span class="pl-c1">hasFocus</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">html</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{controlsDescendantBindings<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">gb</span>(b,<span class="pl-en">d</span>())}};<span class="pl-en">K</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>if<span class="pl-pds">&quot;</span></span>);<span class="pl-en">K</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ifnot<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">K</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>with<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">createChildContext</span>(d)});<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>options binding applies only to SELECT elements<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;)<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>(<span class="pl-c1">0</span>);<span class="pl-k">return</span>{controlsDescendantBindings<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">xa</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">selected</span>})}function f(a,b,c){var d=typeof b;return&quot;function&quot;==d?b(a):&quot;string&quot;==d?a[b]:c}function k(d,e){if(r&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line">m)<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>)),<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(n,<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(e[<span class="pl-c1">0</span>]));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Sb</span>(e[<span class="pl-c1">0</span>],g);r<span class="pl-k">&amp;&amp;!</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">qa</span>,<span class="pl-c1">null</span>,[b,<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>])}}<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">multiple</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">scrollTop</span><span class="pl-k">:</span><span class="pl-c1">null</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>()),m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>valueAllowUnset<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">has</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>),x<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsIncludeDestroyed<span class="pl-pds">&quot;</span></span>);d<span class="pl-k">=</span>{};<span class="pl-k">var</span> q,n<span class="pl-k">=</span>[];m<span class="pl-k">||</span>(h<span class="pl-k">?</span>n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-en">e</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-smi">s</span>)<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[<span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span>])));g<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>[g]),q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">xa</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> x<span class="pl-k">||</span>b<span class="pl-k">===</span>p<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>b<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_destroy</span>)}),<span class="pl-smi">c</span>.<span class="pl-c1">has</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsCaption<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsCaption<span class="pl-pds">&quot;</span></span>)),<span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">!==</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-c1">unshift</span>(<span class="pl-c1">L</span>)));<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">d</span>.<span class="pl-en">beforeRemove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-c1">removeChild</span>(a)};g<span class="pl-k">=</span>k;<span class="pl-smi">c</span>.<span class="pl-c1">has</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsAfterRender<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsAfterRender<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-en">k</span>(<span class="pl-c1">0</span>,d);<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsAfterRender<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span>,[d[<span class="pl-c1">0</span>],b<span class="pl-k">!==</span><span class="pl-c1">L</span><span class="pl-k">?</span>b<span class="pl-k">:</span>p])});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">fb</span>(b,q,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;</span>g[<span class="pl-c1">0</span>].<span class="pl-c1">selected</span><span class="pl-k">?</span>[<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(g[<span class="pl-c1">0</span>])]<span class="pl-k">:</span>[],r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>);d<span class="pl-k">===</span><span class="pl-c1">L</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ha</span>(e,<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsCaption<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(e,p))<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-en">f</span>(d,<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsValue<span class="pl-pds">&quot;</span></span>),d),<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(g)),</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-en">f</span>(d,<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>optionsText<span class="pl-pds">&quot;</span></span>),g),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ha</span>(e,d));<span class="pl-k">return</span>[e]},d,g);<span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-k">function</span>(){m<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>)),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(h<span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>().<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[<span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span>])<span class="pl-k">!==</span>n[<span class="pl-c1">0</span>]<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-c1">selectedIndex</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">qa</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>)});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">kc</span>(b);l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">20</span><span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(l<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">scrollTop</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">scrollTop</span><span class="pl-k">=</span>l)}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ab</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>();<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">selectedOptions</span><span class="pl-k">=</span>{after<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>options<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>foreach<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">d</span>(),f<span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-c1">selected</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b))});<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">ra</span>(e,c,<span class="pl-s"><span class="pl-pds">&quot;</span>selectedOptions<span class="pl-pds">&quot;</span></span>,f)})},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>values binding applies only to SELECT elements<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>());c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Sb</span>(b,d)})}};<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-c1">V</span>.<span class="pl-smi">selectedOptions</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">style</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>()<span class="pl-k">||</span>{});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">A</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">||</span>d<span class="pl-k">===</span>p<span class="pl-k">||!</span><span class="pl-c1">1</span><span class="pl-k">===</span>d)d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">b</span>.<span class="pl-c1">style</span>[c]<span class="pl-k">=</span>d})}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">submit</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-en">d</span>())<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>The value for a submit binding must be a function<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>submit<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c,e<span class="pl-k">=</span><span class="pl-en">d</span>();<span class="pl-k">try</span>{c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">call</span>(<span class="pl-smi">f</span>.<span class="pl-smi">$data</span>,b)}<span class="pl-k">finally</span>{<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">returnValue</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)}})}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">text</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{controlsDescendantBindings<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ha</span>(b,<span class="pl-en">d</span>())}};<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>.<span class="pl-c1">text</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(y<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-smi">navigator</span>)<span class="pl-k">var</span> <span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a)<span class="pl-k">return</span> <span class="pl-c1">parseFloat</span>(a[<span class="pl-c1">1</span>])},d<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">opera</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-smi">opera</span>.<span class="pl-c1">version</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">y</span>.<span class="pl-smi">opera</span>.<span class="pl-c1">version</span>()),c<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">navigator</span>.<span class="pl-c1">userAgent</span>,</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(?:(?!chrome)<span class="pl-c1">.</span>)<span class="pl-k">*</span>version<span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-k">^</span> ]</span><span class="pl-k">*</span>) safari<span class="pl-pds">/</span>i</span>)),f<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>Firefox<span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-k">^</span> ]</span><span class="pl-k">*</span>)<span class="pl-pds">/</span></span>));<span class="pl-k">if</span>(<span class="pl-c1">10</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span>)<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>(),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>(),<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">activeElement</span>;(c<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(c,h))<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(b)},<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">ownerDocument</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(d,k)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(d,k,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>selectionchange<span class="pl-pds">&quot;</span></span>,l));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,h,c)};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">textInput</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">l</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,c,d)}function k(){var d=a.a.c(c());if(null===d||d===p)d=&quot;&quot;;w!==p&amp;&amp;d===w?setTimeout(k,4):b.value!==d&amp;&amp;(u=d,b.value=d)}function v(){A||</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">(w<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(t,<span class="pl-c1">4</span>))}function t(){clearTimeout(A);w=A=p;var d=b.value;u!==d&amp;&amp;(u=d,a.h.ra(c(),l,&quot;textInput&quot;,d))}var u=b.value,A,w;10&gt;a.a.M?(h(&quot;propertychange&quot;,function(a){&quot;value&quot;===a.propertyName&amp;&amp;t()}),8==a.a.M&amp;&amp;(h(&quot;keyup&quot;,t),h(&quot;keydown&quot;,t)),8&lt;=a.a.M&amp;&amp;(g(b,t),h(&quot;dragend&quot;,v))):(h(&quot;input&quot;,t),5&gt;e&amp;&amp;&quot;textarea&quot;===a.a.v(b)?(h(&quot;keydown&quot;,v),h(&quot;paste&quot;,v),h(&quot;cut&quot;,v)):11&gt;d?h(&quot;keydown&quot;,v):4&gt;f&amp;&amp;(h(&quot;DOMAutoComplete&quot;,t),h(&quot;dragdrop&quot;,t),h(&quot;drop&quot;,t)));h(&quot;change&quot;,t);a.w(k,null,{q:b})}};a.h.V.textInput=!0;a.d.textinput=</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">preprocess</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textInput<span class="pl-pds">&quot;</span></span>,a)}}})();<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">uniqueName</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-en">d</span>()){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ko_unique_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> <span class="pl-k">++</span><span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">uniqueName</span>.<span class="pl-smi">fc</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Rb</span>(b,c)}}};<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">uniqueName</span>.<span class="pl-smi">fc</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>{after<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>options<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>foreach<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>radio<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>],f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>valueUpdate<span class="pl-pds">&quot;</span></span>),k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">null</span>;f<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>[f]),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ia</span>(e,f),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">wb</span>(e));<span class="pl-k">var</span> <span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(){h<span class="pl-k">=</span><span class="pl-c1">null</span>;k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">d</span>(),g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">ra</span>(e,c,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,g)};<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>off<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">autocomplete</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">form</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>off<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">form</span>.<span class="pl-smi">autocomplete</span><span class="pl-k">||</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">m</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>propertychange<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>propertychange<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>focus<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>blur<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){k<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>()}));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>l;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Dc</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>after<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(){h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b);<span class="pl-c1">setTimeout</span>(l,<span class="pl-c1">0</span>)},c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">5</span>));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">n</span>(b,c,d)});<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>()),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>h<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">===</span>h)<span class="pl-c1">setTimeout</span>(g,<span class="pl-c1">0</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">!==</span>f)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(b)){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>valueAllowUnset<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(b,e,l)};<span class="pl-en">f</span>();l<span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">s</span>(b)<span class="pl-k">?</span><span class="pl-c1">setTimeout</span>(f,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">qa</span>,<span class="pl-c1">null</span>,[b,<span class="pl-s"><span class="pl-pds">&quot;</span>change<span class="pl-pds">&quot;</span></span>])}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">i</span>.<span class="pl-en">Y</span>(b,e)};<span class="pl-smi">a</span>.<span class="pl-en">w</span>(g,<span class="pl-c1">null</span>,{q<span class="pl-k">:</span>b})}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-en">va</span>(b,{checkedValue<span class="pl-k">:</span>d})},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(){}};<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-c1">V</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-en">d</span>()),e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span>;c<span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>)}};(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">d</span>[b]<span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">d</span>.<span class="pl-c1">event</span>.<span class="pl-smi">init</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,d,<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{};a[b]<span class="pl-k">=</span><span class="pl-en">c</span>();<span class="pl-k">return</span> a},e,f,k)}}})(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">J</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">renderTemplateSource</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Override renderTemplateSource<span class="pl-pds">&quot;</span></span>);};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">createJavaScriptEvaluatorBlock</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Override createJavaScriptEvaluatorBlock<span class="pl-pds">&quot;</span></span>);};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">makeTemplateSource</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b){d<span class="pl-k">=</span>d<span class="pl-k">||</span>w;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">getElementById</span>(b);<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot find template with ID <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">a.t.l</span>(c)}<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-c1">8</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span>)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">a.t.ha</span>(b);<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown template type: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">renderTemplate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">makeTemplateSource</span>(a,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">e);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">renderTemplateSource</span>(a,d,c,e)};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isTemplateRewritten</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">allowTemplateRewriting</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">makeTemplateSource</span>(a,d).<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isRewritten<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">a</span>.<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">rewriteTemplate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">makeTemplateSource</span>(a,c);d<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-c1">text</span>());<span class="pl-smi">a</span>.<span class="pl-c1">text</span>(d);<span class="pl-smi">a</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>isRewritten<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>templateEngine<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">J</span>);<span class="pl-smi">a</span>.<span class="pl-en">kb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">bb</span>(b);<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">ka</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>b[g].<span class="pl-smi">key</span>;<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-en">hasOwnProperty</span>(m)){<span class="pl-k">var</span> x<span class="pl-k">=</span>l[m];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> x){<span class="pl-k">if</span>(m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-en">x</span>(b[g].<span class="pl-c1">value</span>))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(m);}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>x)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>This template engine does not support the &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; binding within its templates<span class="pl-pds">&quot;</span></span>);}}d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ko.__tr_ambtns(function($context,$element){return(function(){return{ <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">Ea</span>(b,{valueAccessors<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> } })()},&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-en">createJavaScriptEvaluatorBlock</span>(d)<span class="pl-k">+</span>c}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(&lt;(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span><span class="pl-c1">\d</span><span class="pl-k">*</span>)(?:<span class="pl-c1">\s</span><span class="pl-k">+</span>(?!data-bind<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>)<span class="pl-c1">[<span class="pl-c1">a-z0-9</span><span class="pl-cce">\-</span>]</span><span class="pl-k">+</span>(?:=(?:<span class="pl-cce">\&quot;</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\&quot;</span>]</span><span class="pl-k">*</span><span class="pl-cce">\&quot;</span><span class="pl-k">|</span><span class="pl-cce">\&#39;</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\&#39;</span>]</span><span class="pl-k">*</span><span class="pl-cce">\&#39;</span><span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>))<span class="pl-k">?</span>)<span class="pl-k">*</span><span class="pl-c1">\s</span><span class="pl-k">+</span>)data-bind<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[&quot;&#39;]</span>)(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*?</span>)<span class="pl-k">\3</span><span class="pl-pds">/</span>gi</span>,c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\x</span>3c!--<span class="pl-c1">\s</span><span class="pl-k">*</span>ko<span class="pl-k">\b</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*?</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>--<span class="pl-cce">\x</span>3e<span class="pl-pds">/</span>g</span>;<span class="pl-k">return</span>{<span class="pl-en">lc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">c</span>.<span class="pl-en">isTemplateRewritten</span>(b,d)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-en">rewriteTemplate</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">kb</span>.<span class="pl-en">xc</span>(b,c)},d)},<span class="pl-en">xc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">m</span>){<span class="pl-k">return</span> <span class="pl-en">b</span>(m,c,d,f)}).<span class="pl-c1">replace</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-en">b</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>3c!-- ko --<span class="pl-cce">\x</span>3e<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#comment<span class="pl-pds">&quot;</span></span>,f)})},<span class="pl-en">dc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-en">$a</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">nextSibling</span>;l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">va</span>(l,b,h)})}}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>__tr_ambtns<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">kb</span>.<span class="pl-smi">dc</span>);(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">t</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">=</span>a};<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">text</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>),b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>script<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>innerHTML<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">l</span>[b];<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>];<span class="pl-s"><span class="pl-pds">&quot;</span>innerHTML<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">gb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,d)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">l</span>[b]<span class="pl-k">=</span>d};<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">data</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,b<span class="pl-k">+</span>c);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,b<span class="pl-k">+</span>c,<span class="pl-c1">arguments</span>[<span class="pl-c1">1</span>])};<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>();<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-en">ha</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">=</span>a};<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.t.l</span>;<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">text</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,d)<span class="pl-k">||</span>{};<span class="pl-smi">b</span>.<span class="pl-smi">lb</span><span class="pl-k">===</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">Na</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lb</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">Na</span>.<span class="pl-smi">innerHTML</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">lb</span>}<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">d,{lb<span class="pl-k">:</span><span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>]})};<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">nodes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,d)<span class="pl-k">||</span>{}).<span class="pl-smi">Na</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span>,d,{Na<span class="pl-k">:</span><span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>]})};<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>templateSources<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">t</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>templateSources.domElement<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">l</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>templateSources.anonymousTemplate<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">t</span>.<span class="pl-smi">ha</span>)})();(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>(c);b<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>b)<span class="pl-k">!==</span>c;)b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">nextSibling</span>(e),<span class="pl-en">d</span>(e,b)}function d(c,d){if(c.length){var e=c[0],f=c[c.length-1],h=e.parentNode,k=a.L.instance,r=k.preprocessNode;if(r){b(e,f,function(a,</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">b){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">previousSibling</span>,d<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">call</span>(k,a);d<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">||</span>b),a<span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>d[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>c))});<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">return</span>;e<span class="pl-k">===</span>f<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e)<span class="pl-k">:</span>(<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e,f),<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">na</span>(c,h))}<span class="pl-en">b</span>(e,f,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">ub</span>(d,b)});<span class="pl-en">b</span>(e,f,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-en">Xb</span>(b,[d])});<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">na</span>(c,h)}}function c(a){return a.nodeType?a:0&lt;a.length?a[0]:null}function e(b,e,f,h,q){q=q||{};var n=(b&amp;&amp;c(b)||f||{}).ownerDocument,r=q.templateEngine||k;a.kb.lc(f,r,n);f=r.renderTemplate(f,h,q,n);if(&quot;number&quot;!=</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> f[<span class="pl-c1">0</span>].<span class="pl-c1">nodeType</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Template engine must return an array of DOM nodes<span class="pl-pds">&quot;</span></span>);n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">switch</span>(e){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>replaceChildren<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">T</span>(b,f);n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>replaceNode<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Qb</span>(b,f);n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ignoreTargetNode<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown renderMode: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e);}n<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">d</span>(f,h),<span class="pl-smi">q</span>.<span class="pl-smi">afterRender</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(<span class="pl-smi">q</span>.<span class="pl-smi">afterRender</span>,<span class="pl-c1">null</span>,[f,<span class="pl-smi">h</span>.<span class="pl-smi">$data</span>]));<span class="pl-k">return</span> f}function f(b,c,d){return a.F(b)?b():&quot;function&quot;===typeof b?b(c,d):b}var k;a.hb=function(b){if(b!=p&amp;&amp;!(b instanceof a.J))throw Error(&quot;templateEngine must inherit from ko.templateEngine&quot;);</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span>b};<span class="pl-smi">a</span>.<span class="pl-en">eb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>,<span class="pl-smi">x</span>,<span class="pl-smi">q</span>){h<span class="pl-k">=</span>h<span class="pl-k">||</span>{};<span class="pl-k">if</span>((<span class="pl-smi">h</span>.<span class="pl-smi">templateEngine</span><span class="pl-k">||</span>k)<span class="pl-k">==</span>p)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Set a template engine before calling renderTemplate<span class="pl-pds">&quot;</span></span>);q<span class="pl-k">=</span>q<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>replaceChildren<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(x){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-en">c</span>(x);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">j</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d <span class="pl-k">instanceof</span> <span class="pl-smi">a</span>.<span class="pl-c1">N</span><span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">a.N</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(d)),p<span class="pl-k">=</span><span class="pl-en">f</span>(b,<span class="pl-smi">k</span>.<span class="pl-smi">$data</span>,k),k<span class="pl-k">=</span><span class="pl-en">e</span>(x,q,p,k,h);<span class="pl-s"><span class="pl-pds">&quot;</span>replaceNode<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>q<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span>k,n<span class="pl-k">=</span><span class="pl-en">c</span>(x))},<span class="pl-c1">null</span>,{<span class="pl-en">Pa</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span>n<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Qa</span>(n)},q<span class="pl-k">:</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>replaceNode<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>q<span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">parentNode</span><span class="pl-k">:</span>n})}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">H</span>.<span class="pl-en">$a</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">eb</span>(b,d,h,c,<span class="pl-s"><span class="pl-pds">&quot;</span>replaceNode<span class="pl-pds">&quot;</span></span>)})};<span class="pl-smi">a</span>.<span class="pl-en">Cc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">h</span>,<span class="pl-smi">k</span>,<span class="pl-smi">q</span>){<span class="pl-k">function</span> <span class="pl-en">n</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">d</span>(b,v);<span class="pl-smi">h</span>.<span class="pl-smi">afterRender</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-en">afterRender</span>(b,a);v<span class="pl-k">=</span><span class="pl-c1">null</span>}function r(a,c){v=q.createChildContext(a,h.as,function(a){a.$index=c});var d=f(b,a,v);return e(null,&quot;ignoreTargetNode&quot;,d,v,h)}var v;return a.j(function(){var b=a.a.c(c)||[];&quot;undefined&quot;==typeof b.length&amp;&amp;(b=[b]);b=a.a.xa(b,function(b){return h.includeDestroyed||b===p||null===b||!a.a.c(b._destroy)});a.k.u(a.a.fb,null,[k,b,r,h,n])},null,{q:k})};var h=a.a.f.I();a.d.template={init:function(b,c){var d=a.a.c(c());if(&quot;string&quot;==typeof d||d.name)a.e.ma(b);else{if(&quot;nodes&quot;in d){if(d=</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">nodes</span><span class="pl-k">||</span>[],<span class="pl-smi">a</span>.<span class="pl-en">F</span>(d))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>The &quot;nodes&quot; option must be a plain, non-observable array.<span class="pl-pds">&#39;</span></span>);}<span class="pl-k">else</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">childNodes</span>(b);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Jb</span>(d);(<span class="pl-k">new</span> <span class="pl-en">a.t.ha</span>(b)).<span class="pl-en">nodes</span>(d)}<span class="pl-k">return</span>{controlsDescendantBindings<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-en">c</span>(),r;c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(k);d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span>c<span class="pl-k">=</span>{}<span class="pl-k">:</span>(k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>if<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(c[<span class="pl-s"><span class="pl-pds">&quot;</span>if<span class="pl-pds">&quot;</span></span>])),d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>ifnot<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">c</span>.<span class="pl-smi">ifnot</span>)),r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">c</span>(<span class="pl-smi">c</span>.<span class="pl-c1">data</span>));<span class="pl-s"><span class="pl-pds">&quot;</span>foreach<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c<span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">Cc</span>(k<span class="pl-k">||</span>b,d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">foreach</span><span class="pl-k">||</span>[],c,b,f)<span class="pl-k">:</span>d<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>data<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">createChildContext</span>(r,<span class="pl-smi">c</span>.<span class="pl-smi">as</span>)<span class="pl-k">:</span>f,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">eb</span>(k<span class="pl-k">||</span>b,f,c,b))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">ma</span>(b);f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">e;(r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(b,h))<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">r</span>.<span class="pl-smi">p</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">p</span>();<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(b,h,f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">$</span>()<span class="pl-k">?</span>f<span class="pl-k">:</span>p)}};<span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-smi">ka</span>.<span class="pl-en">template</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">bb</span>(b);<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">0</span>].<span class="pl-smi">unknown</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>.<span class="pl-en">vc</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>This template engine does not support anonymous templates nested within its templates<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">R</span>.<span class="pl-smi">template</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setTemplateEngine<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">hb</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>renderTemplate<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">eb</span>);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Cb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> e,f,k,h,l;<span class="pl-k">for</span>(e<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-c1">0</span>;(<span class="pl-k">!</span>c<span class="pl-k">||</span>e<span class="pl-k">&lt;</span>c)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>a[f]);<span class="pl-k">++</span>f){<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">=</span>d[k];<span class="pl-k">++</span>k)<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-c1">value</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-c1">value</span>){<span class="pl-smi">h</span>.<span class="pl-smi">moved</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">index</span>;<span class="pl-smi">l</span>.<span class="pl-smi">moved</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-c1">index</span>;<span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(k,<span class="pl-c1">1</span>);e<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}e<span class="pl-k">+=</span>k}}};<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Ma</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">min</span>,l<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">max</span>,g<span class="pl-k">=</span>[],m,p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,q,n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,r<span class="pl-k">=</span>n<span class="pl-k">-</span>p<span class="pl-k">||</span><span class="pl-c1">1</span>,v<span class="pl-k">=</span>p<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">1</span>,t,u,w;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;=</span>p;m<span class="pl-k">++</span>)<span class="pl-k">for</span>(u<span class="pl-k">=</span>t,<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(t<span class="pl-k">=</span>[]),w<span class="pl-k">=</span><span class="pl-en">h</span>(n,m<span class="pl-k">+</span>r),q<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-c1">0</span>,m<span class="pl-k">-</span><span class="pl-c1">1</span>);q<span class="pl-k">&lt;=</span>w;q<span class="pl-k">++</span>)t[q]<span class="pl-k">=</span>q<span class="pl-k">?</span>m<span class="pl-k">?</span>b[m<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">===</span>c[q<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">?</span>u[q<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-en">h</span>(u[q]<span class="pl-k">||</span>v,t[q<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>v)<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>q<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>m<span class="pl-k">+</span><span class="pl-c1">1</span>;h<span class="pl-k">=</span>[];l<span class="pl-k">=</span>[];r<span class="pl-k">=</span>[];m<span class="pl-k">=</span>p;<span class="pl-k">for</span>(q<span class="pl-k">=</span>n;m<span class="pl-k">||</span>q;)n<span class="pl-k">=</span>g[m][q]<span class="pl-k">-</span><span class="pl-c1">1</span>,q<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">===</span>g[m][q<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-c1">push</span>(h[<span class="pl-smi">h</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>{status<span class="pl-k">:</span>e,value<span class="pl-k">:</span>c[<span class="pl-k">--</span>q],index<span class="pl-k">:</span>q})<span class="pl-k">:</span>m<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">===</span>g[m<span class="pl-k">-</span><span class="pl-c1">1</span>][q]<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-c1">push</span>(h[<span class="pl-smi">h</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>{status<span class="pl-k">:</span>f,value<span class="pl-k">:</span>b[<span class="pl-k">--</span>m],index<span class="pl-k">:</span>m})<span class="pl-k">:</span>(<span class="pl-k">--</span>q,<span class="pl-k">--</span>m,<span class="pl-smi">k</span>.<span class="pl-smi">sparse</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-c1">push</span>({status<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>retained<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">value<span class="pl-k">:</span>c[q]}));<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Cb</span>(l,r,<span class="pl-c1">10</span><span class="pl-k">*</span>p);<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">reverse</span>()}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> e<span class="pl-k">?</span>{dontLimitMoves<span class="pl-k">:</span>e}<span class="pl-k">:</span>e<span class="pl-k">||</span>{};a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];c<span class="pl-k">=</span>c<span class="pl-k">||</span>[];<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-en">b</span>(a,c,<span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,e)<span class="pl-k">:</span><span class="pl-en">b</span>(c,a,<span class="pl-s"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span>,e)}}();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.compareArrays<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">Ma</span>);(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">j</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">d</span>(f,h,<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">na</span>(l,b))<span class="pl-k">||</span>[];<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">Qb</span>(l,g),k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">k</span>.<span class="pl-en">u</span>(k,<span class="pl-c1">null</span>,[f,g,h]));<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ia</span>(l,g)},<span class="pl-c1">null</span>,{q<span class="pl-k">:</span>b,<span class="pl-en">Pa</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">tb</span>(l)}});<span class="pl-k">return</span>{aa<span class="pl-k">:</span>l,j<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-en">$</span>()<span class="pl-k">?</span>g<span class="pl-k">:</span>p}}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-en">I</span>();</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">fb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">l</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){s<span class="pl-k">=</span>u[d];t<span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>(z[b]<span class="pl-k">=</span>s);<span class="pl-smi">s</span>.<span class="pl-en">Ua</span>(t<span class="pl-k">++</span>);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">na</span>(<span class="pl-smi">s</span>.<span class="pl-smi">aa</span>,c);<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(s);<span class="pl-smi">y</span>.<span class="pl-c1">push</span>(s)}function g(b,c){if(b)for(var d=0,e=c.length;d&lt;e;d++)c[d]&amp;&amp;a.a.o(c[d].aa,function(a){b(a,d,c[d].wa)})}e=e||[];k=k||{};var m=a.a.f.get(c,d)===p,u=a.a.f.get(c,d)||[],q=a.a.Ka(u,function(a){return a.wa}),n=a.a.Ma(q,e,k.dontLimitMoves),r=[],v=0,t=0,w=[],y=[];e=[];for(var z=[],q=[],s,C=0,D,E;D=n[C];C++)switch(E=D.moved,D.status){case &quot;deleted&quot;:E===p&amp;&amp;(s=u[v],s.j&amp;&amp;s.j.p(),w.push.apply(w,a.a.na(s.aa,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">c)),<span class="pl-smi">k</span>.<span class="pl-smi">beforeRemove</span><span class="pl-k">&amp;&amp;</span>(e[<span class="pl-c1">C</span>]<span class="pl-k">=</span>s,<span class="pl-smi">y</span>.<span class="pl-c1">push</span>(s)));v<span class="pl-k">++</span>;<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>retained<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-en">l</span>(<span class="pl-c1">C</span>,v<span class="pl-k">++</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">E</span><span class="pl-k">!==</span>p<span class="pl-k">?</span><span class="pl-en">l</span>(<span class="pl-c1">C</span>,<span class="pl-c1">E</span>)<span class="pl-k">:</span>(s<span class="pl-k">=</span>{wa<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-c1">value</span>,Ua<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">r</span>(t<span class="pl-k">++</span>)},<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(s),<span class="pl-smi">y</span>.<span class="pl-c1">push</span>(s),m<span class="pl-k">||</span>(q[<span class="pl-c1">C</span>]<span class="pl-k">=</span>s))}<span class="pl-en">g</span>(<span class="pl-smi">k</span>.<span class="pl-smi">beforeMove</span>,z);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">o</span>(w,<span class="pl-smi">k</span>.<span class="pl-smi">beforeRemove</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">S</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">removeNode</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-c1">firstChild</span>(c),<span class="pl-c1">H</span>;s<span class="pl-k">=</span>y[<span class="pl-c1">C</span>];<span class="pl-c1">C</span><span class="pl-k">++</span>){<span class="pl-smi">s</span>.<span class="pl-smi">aa</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">extend</span>(s,<span class="pl-en">b</span>(c,f,<span class="pl-smi">s</span>.<span class="pl-smi">wa</span>,h,<span class="pl-smi">s</span>.<span class="pl-smi">Ua</span>));<span class="pl-k">for</span>(v<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">aa</span>[v];m<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">nextSibling</span>,<span class="pl-c1">H</span><span class="pl-k">=</span>n,v<span class="pl-k">++</span>)n<span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">e</span>.<span class="pl-en">Fb</span>(c,n,<span class="pl-c1">H</span>);<span class="pl-k">!</span><span class="pl-smi">s</span>.<span class="pl-smi">rc</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">h</span>(<span class="pl-smi">s</span>.<span class="pl-smi">wa</span>,<span class="pl-smi">s</span>.<span class="pl-smi">aa</span>,<span class="pl-smi">s</span>.<span class="pl-smi">Ua</span>),<span class="pl-smi">s</span>.<span class="pl-smi">rc</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}<span class="pl-en">g</span>(<span class="pl-smi">k</span>.<span class="pl-smi">beforeRemove</span>,e);<span class="pl-en">g</span>(<span class="pl-smi">k</span>.<span class="pl-smi">afterMove</span>,z);<span class="pl-en">g</span>(<span class="pl-smi">k</span>.<span class="pl-smi">afterAdd</span>,q);<span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(c,d,r)}})();<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils.setDomNodeChildrenFromArrayMapping<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-smi">fb</span>);<span class="pl-smi">a</span>.<span class="pl-en">P</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">allowTemplateRewriting</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.J</span>;<span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">renderTemplateSource</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(d<span class="pl-k">=</span>(<span class="pl-c1">9</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">nodes</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">nodes</span>()<span class="pl-k">:</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">O</span>(<span class="pl-smi">d</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-c1">childNodes</span>);b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">text</span>();<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">ca</span>(b,e)};<span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-smi">Va</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.P</span>;<span class="pl-smi">a</span>.<span class="pl-en">hb</span>(<span class="pl-smi">a</span>.<span class="pl-c1">P</span>.<span class="pl-smi">Va</span>);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>nativeTemplateEngine<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">P</span>);(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">Ya</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">uc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>u<span class="pl-k">||!</span><span class="pl-smi">u</span>.<span class="pl-smi">tmpl</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">u</span>.<span class="pl-smi">tmpl</span>.<span class="pl-smi">tag</span>.<span class="pl-smi">tmpl</span>.<span class="pl-smi">open</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>__<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-c1">2</span>}<span class="pl-k">catch</span>(a){}<span class="pl-k">return</span> <span class="pl-c1">1</span>}();<span class="pl-c1">this</span>.<span class="pl-en">renderTemplateSource</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){k<span class="pl-k">=</span>k<span class="pl-k">||</span>w;f<span class="pl-k">=</span>f<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">&gt;</span>a)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>precompiled<span class="pl-pds">&quot;</span></span>);h<span class="pl-k">||</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">text</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">template</span>(<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>{{ko_with $item.koBindingContext}}<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>{{/ko_with}}<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">b</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>precompiled<span class="pl-pds">&quot;</span></span>,h));b<span class="pl-k">=</span>[<span class="pl-smi">e</span>.<span class="pl-smi">$data</span>];e<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">extend</span>({koBindingContext<span class="pl-k">:</span>e},<span class="pl-smi">f</span>.<span class="pl-smi">templateOptions</span>);e<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">tmpl</span>(h,b,e);<span class="pl-smi">e</span>.<span class="pl-en">appendTo</span>(<span class="pl-smi">k</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">u</span>.<span class="pl-smi">fragments</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> e};<span class="pl-c1">this</span>.<span class="pl-en">createJavaScriptEvaluatorBlock</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>{{ko_code ((function() { return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> })()) }}<span class="pl-pds">&quot;</span></span>};<span class="pl-c1">this</span>.<span class="pl-en">addTemplate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">w</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;script type=&#39;text/html&#39; id=&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>3c/script&gt;<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">u</span>.<span class="pl-smi">tmpl</span>.<span class="pl-smi">tag</span>.<span class="pl-smi">ko_code</span><span class="pl-k">=</span>{open<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>__.push($1 || &#39;&#39;);<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">u</span>.<span class="pl-smi">tmpl</span>.<span class="pl-smi">tag</span>.<span class="pl-smi">ko_with</span><span class="pl-k">=</span>{open<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>with($1) {<span class="pl-pds">&quot;</span></span>,close<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>} <span class="pl-pds">&quot;</span></span>})};<span class="pl-smi">a</span>.<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.J</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.Ya</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">uc</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">hb</span>(b);<span class="pl-smi">a</span>.<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>jqueryTmplTemplateEngine<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">Ya</span>)})()})})();})();</td>
      </tr>
</table>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="container site-footer-container">
  <div class="site-footer " role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.61083s from github-fe151-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    <script crossorigin="anonymous" integrity="sha256-kfmMN/yE6sJINu7CVn6ZEnQglDaaBMTrpuPNH6GJAtk=" src="https://assets-cdn.github.com/assets/compat-91f98c37fc84eac24836eec2567e9912742094369a04c4eba6e3cd1fa18902d9.js"></script>
    <script crossorigin="anonymous" integrity="sha256-ufiR+qDpyvI7kK8ExmM1SMm0Bp/R/HK7/KgJ1w8NgXI=" src="https://assets-cdn.github.com/assets/frameworks-b9f891faa0e9caf23b90af04c6633548c9b4069fd1fc72bbfca809d70f0d8172.js"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha256-fWlf1YGaKWpRZkLtCymB7Z4FSRm1JsxHL6/5XOpqtWk=" src="https://assets-cdn.github.com/assets/github-7d695fd5819a296a516642ed0b2981ed9e054919b526cc472faff95cea6ab569.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

